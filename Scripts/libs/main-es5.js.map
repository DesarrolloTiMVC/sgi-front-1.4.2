{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account-create/account-create.component.ts","webpack:///src/app/account/account-create/account-create.component.html","webpack:///src/app/account/account-edit/account-edit.component.ts","webpack:///src/app/account/account-edit/account-edit.component.html","webpack:///src/app/account/account/account.component.ts","webpack:///src/app/account/account/account.component.html","webpack:///src/app/account/role-create/role-create.component.ts","webpack:///src/app/account/role-create/role-create.component.html","webpack:///src/app/account/role-edit/role-edit.component.ts","webpack:///src/app/account/role-edit/role-edit.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/area/area-create/area-create.component.ts","webpack:///src/app/area/area-create/area-create.component.html","webpack:///src/app/area/area-edit/area-edit.component.ts","webpack:///src/app/area/area-edit/area-edit.component.html","webpack:///src/app/area/area.component.ts","webpack:///src/app/area/area.component.html","webpack:///src/app/biblioteca/biblioteca.component.ts","webpack:///src/app/biblioteca/biblioteca.component.html","webpack:///src/app/components/listado-areas/listado-areas/listado-areas.component.ts","webpack:///src/app/components/listado-areas/listado-areas/listado-areas.component.html","webpack:///src/app/documentos/documento-edit/documento-edit.component.ts","webpack:///src/app/documentos/documento-edit/documento-edit.component.html","webpack:///src/app/documentos/documento-list/documento-list.component.ts","webpack:///src/app/documentos/documento-list/documento-list.component.html","webpack:///src/app/documentos/documento.ts","webpack:///src/app/documentos/documentos-create/documentos-create.component.ts","webpack:///src/app/documentos/documentos-create/documentos-create.component.html","webpack:///src/app/documentos/documentos.component.ts","webpack:///src/app/documentos/documentos.component.html","webpack:///src/app/inicio/inicio/inicio.component.ts","webpack:///src/app/inicio/inicio/inicio.component.html","webpack:///src/app/interceptors/loader.interceptor.ts","webpack:///src/app/layouts/login-layout/login-layout.component.ts","webpack:///src/app/layouts/login-layout/login-layout.component.html","webpack:///src/app/layouts/page-layout/page-layout.component.ts","webpack:///src/app/layouts/page-layout/page-layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/account.service.ts","webpack:///src/app/services/area.service.ts","webpack:///src/app/services/destino-documento.service.ts","webpack:///src/app/services/documento.service.ts","webpack:///src/app/services/loader.service.ts","webpack:///src/app/services/role.service.ts","webpack:///src/app/services/tipo-documento.service.ts","webpack:///src/app/shared/authguard.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","$event","stopPropagation","selection","AccountCreateComponent","formBuilder","_areaService","_accountService","_roleService","submitted","tituloColumnas","paso1","paso2","title","buildForm","listarAreas","listarRoles","formUsuario","group","FirstName","required","LastName","Email","email","PhoneNumber","UserName","Password","minLength","RoleId","Level","JoinDate","Date","listar","subscribe","result","dataSource","userString","localStorage","getItem","userObject","JSON","parse","userName","console","log","listadoRoles","filter","rol","Id","controls","auxUsuario","value","guardar","IdUsuarioGuardado","setItem","cambiarEstado","alert","error","Message","input","FormData","areas","selected","append","stringify","asociarUsuarioArea","isAllSelected","clear","data","forEach","row","select","numSelected","length","numRows","selector","templateUrl","styleUrls","AccountEditComponent","_activatedRoute","_areasService","llenarFormulario","userId","snapshot","params","actualizar","idUsuario","actualizarAsociacionUsuarioArea","paramMap","get","listarPorId","patchValue","listarAreasUsuario","usuarioId","_data","onSubmit","AccountComponent","_router","listarDataUsuarios","inicializaFormulario","formData","valueChanges","change","applyFilter","filtro","TipoDocumentoId","Role","filterValue","trim","toLowerCase","navigate","eliminar","RoleCreateComponent","RoleEditComponent","routes","path","component","pathMatch","children","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","enabled","destinos","currentUser","Areas","separarMenus","logOut","documentosEstructurales","x","otrosDestinos","AppModule","provide","useClass","multi","useValue","withConfig","declarations","providers","bootstrap","AreaCreateComponent","AreaEditComponent","AreaComponent","tituloTabla","listadoAreas","element","confirm","Nombre","BibliotecaComponent","_documentoService","_snackBar","_sanitizer","_matInput","_destinoDocumentoService","TipoDocumento","routeReuseStrategy","shouldReuseRoute","verificarUsuario","setTituloPagina","usuario","listarDocumentos","urlParams","url","includes","IdArea","listarDocumentosPorArea","listarDocumentoPorDestino","listarDocumentoPorArea","sort","a","b","FechaIngreso","getTime","paginator","sectionId","idArea","idDestino","pipe","doc","DestinoDocumentoId","some","ar","descargarDocumento","extension","listarExtensionPorMime","type","blob","Blob","Codigo","listarPorArea","listadoDocumentos","areaId","firstPage","elemento","navigateByUrl","listadoTipoDocumentos","tipoDocumentoId","mime","listadoMime","datos","AreaId","ListadoAreasComponent","Estado","DocumentoEditComponent","_tipoDocumentoService","editDocumento","nombre","documentoId","listarDestinoDocumento","listarTipoDocumento","listarDocumentoPorId","formDocumento","Descripcion","EsTransversal","Version","FechaEmision","Archivo","listarAreasDocumento","area","listadoDestinoDocumento","listadoTipoDocumento","event","target","files","file","fileToUpload","mensaje","confirmar","name","editar","actualizarDocumentoArea","resetearFormulario","reset","onFileSelect","asociarDocumentoArea","DocumentoListComponent","Documento","DocumentosCreateComponent","_matSnack","insertDocumento","open","duration","documentoGuardadoId","cambiarVistas","toString","DocumentosComponent","_route","checked","InicioComponent","item","LoaderInterceptor","loaderService","next","show","handle","hide","LoginLayoutComponent","PageLayoutComponent","_cookieService","destinosPrimarios","destinosSecundarios","role","rolUsuario","Item","localeCompare","y","cerrarSesion","LoginComponent","userLogged","isDisabled","mensajeError","formLogin","validateUser","Token","AccountService","_http","_apiUrl","apiUrl","headers","set","account","_header","post","put","providedIn","AreaService","DestinoDocumentoService","_httpClient","DocumentoService","header","window","documento","codigo","httpParams","Authorization","responseType","LoaderService","isLoading","RoleService","TipoDocumentoService","tipoDocumento","AuthguardService","jwtHelper","tokenParam","isTokenExpired","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AreaService } from 'src/app/services/area.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../../services/account.service';\nimport { Area } from 'src/app/area/area';\nimport { Account } from '../account'\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Role } from 'src/app/role/role';\nimport { RoleService } from 'src/app/services/role.service';\nimport { MatTableDataSource } from '@angular/material';\n \n@Component({\n  selector: 'app-account-create',\n  templateUrl: './account-create.component.html',\n  styleUrls: ['./account-create.component.css']\n})\nexport class AccountCreateComponent implements OnInit {\n\n  public formUsuario: FormGroup\n  public auxUsuario: Account\n  public submitted = false \n  public listadoAreas: Area[]\n  public listadoRoles: Role[]\n  public IdUsuarioGuardado: string\n  \n  selection = new SelectionModel<Area>(true, []);\n\n  dataSource: MatTableDataSource<Area> \n  tituloColumnas = ['Seleccionar','Nombre']\n  public paso1 = true\n  public paso2 = false\n  public title = 'my-awesome-app'\n\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _accountService: AccountService,\n    private _roleService: RoleService) { }\n\n\n  ngOnInit() {\n    this.buildForm()\n    this.listarAreas()\n    this.listarRoles()\n  }\n\n\n  buildForm(){\n    this.formUsuario = this.formBuilder.group({\n      FirstName: ['', Validators.required ],\n      LastName: ['', Validators.required ],\n      Email: ['', Validators.email ],\n      PhoneNumber:  [],\n      UserName: ['', Validators.required ],\n      Password: [null,[Validators.required,Validators.minLength(6)]],\n      RoleId: [''],\n      Level: 1, \n      JoinDate: new Date,\n    });\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.dataSource = new MatTableDataSource(result) \n      })\n  }\n\n  listarRoles() {\n    // Paso 1: Obtener la cadena JSON del localStorage\n    var userString = localStorage.getItem('user');\n\n    // Paso 2: Convertir la cadena JSON a un objeto JavaScript\n    var userObject = JSON.parse(userString);\n\n    // Paso 3: Acceder a la propiedad UserName dentro del objeto\n    var userName = userObject.UserName;\n\n    // Ahora 'userName' contiene el valor de la propiedad UserName\n    console.log(userName);  \n\n    if(userName==\"administrador@mineravallecentral.cl\") {\n      this._roleService.listar()\n      .subscribe(result => {\n        this.listadoRoles = result;\n      });\n    } else {\n      this._roleService.listar()\n      .subscribe(result => {\n        // Filtrar el resultado para excluir el rol con valor 1\n        \n        this.listadoRoles = result.filter(rol => rol.Id !== \"1\");\n      });\n    }\n  }\n\n  get f() { return this.formUsuario.controls; }\n   \n  onSubmit(){\n    \n    this.auxUsuario = this.formUsuario.value\n    this._accountService.guardar(this.auxUsuario)\n    .subscribe( \n      result => {\n        this.IdUsuarioGuardado = this.formUsuario.controls['UserName'].value;\n        localStorage.setItem(\"UserId\",this.formUsuario.controls['UserName'].value);\n        this.cambiarEstado()\n        alert(\"usuario guardado\")\n       },\n      error => { \n        console.log()\n        alert(error.error.Message)\n        return ;\n      })\n  }\n\n\n  asociarUsuarioArea(){\n    \n    let input = new FormData();\n    let areas = this.selection.selected; \n    if(!this.IdUsuarioGuardado){\n        console.log(\"no hay usuario para asignarle los datos\")\n    }\n    input.append('ApplicationUserId', this.IdUsuarioGuardado)\n    input.append(\"areas\", JSON.stringify(areas)) \n\n    this._accountService.asociarUsuarioArea(input)\n    .subscribe(\n      result => {\n        alert(\"usuario y areas guardados\")\n      },\n      error => {\n        alert(JSON.stringify(error))\n      }\n    )\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n\n  cambiarEstado(){\n    this.paso1 = false\n    this.paso2 = true\n    this.listarAreas()\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Agregar usuario</h1>\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"paso1\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formUsuario\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-3\">\n                        <label>Nombres</label>\n                        <input type=\"text\" formControlName=\"FirstName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FirstName.errors }\" />\n                        <div *ngIf=\"submitted && f.FirstName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.FirstName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Apellidos</label>\n                        <input type=\"text\" formControlName=\"LastName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.LastName.errors }\" />\n                        <div *ngIf=\"submitted && f.LastName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.LastName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                \n                    <div class=\"form-group col-3\">\n                        <label>E-mail</label>\n                        <input type=\"text\" formControlName=\"Email\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\" />\n                        <div *ngIf=\"submitted && f.Email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Email.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Telefono</label>\n                        <input type=\"text\" formControlName=\"PhoneNumber\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.PhoneNumber.errors }\" />\n                        <div *ngIf=\"submitted && f.PhoneNumber.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.PhoneNumber.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Nombre Usuario</label>\n                        <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                        <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                        <div *ngIf=\"formUsuario.get('Password').invalid && (formUsuario.get('Password').dirty || formUsuario.get('Password').touched)\"\n                        class=\"alert alert-danger\">\n                    \n                    <div *ngIf=\"formUsuario.get('Password').errors.required\">\n                        Debes ingresar un password\n                    </div>\n                    <div *ngIf=\"formUsuario.get('Password').errors.minlength\">\n                        La contraseña debe poseer al menos 6 caracteres\n                    </div>\n                    </div>\n\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Rol de usuario </label>\n                        <select formControlName=\"RoleId\" class=\"form-control form-control-sm\">\n                            <option *ngFor=\"let data of listadoRoles\" [ngValue]=\"data.Id\" >{{ data.Name }}</option> <!--  -->\n                        </select>\n                    </div> \n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-6\">\n                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n                    </div>\n                </div> \n            </form>\n        </div>\n    </div> \n    <br>\n    <div>\n        <div class=\"row\" >\n            <div class=\"col-10 offset-1\">\n                <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                    <ng-container matColumnDef=\"Seleccionar\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                            </mat-checkbox>\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"Nombre\">\n                        <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                    </ng-container>\n                   \n                    <ng-container matColumnDef=\"Acciones\">\n                        <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> \n                            <button mat-icon-button color=\"primary\" ><!-- (click)=\"editarData(element)\" -->\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                                <mat-icon>delete</mat-icon>\n                            </button> -->\n                        </mat-cell>\n                    </ng-container>\n        \n                    <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n                </mat-table>\n            </div>\n        \n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n            </div>\n        </div>  \n    </div>\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AccountService } from 'src/app/services/account.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Area } from 'src/app/area/area';\nimport { Role } from 'src/app/role/role';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource, MAT_DATEPICKER_SCROLL_STRATEGY } from '@angular/material';\nimport { AreaService } from 'src/app/services/area.service';\nimport { RoleService } from 'src/app/services/role.service';\n\n@Component({\n  selector: 'app-account-edit',\n  templateUrl: './account-edit.component.html',\n  styleUrls: ['./account-edit.component.css']\n})\nexport class AccountEditComponent implements OnInit {\n\n  public formUsuario: FormGroup\n  public auxUsuario: Account\n  public submitted = false \n  public listadoAreas: Area[]\n  public listadoRoles: Role[]\n  public IdUsuarioGuardado: string\n  public areasUsuario: Area[]\n  tituloColumnas = ['Seleccionar','Nombre']\n  selection = new SelectionModel<Area>(true, []);\n  dataSource: MatTableDataSource<Area> \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _accountService: AccountService,\n    private _activatedRoute: ActivatedRoute,\n    private _areasService: AreaService,\n    private _roleService: RoleService,\n    ) { }\n\n  ngOnInit() {\n    this.buildForm()\n    this.listarAreas()\n    this.listarRoles()\n    this.llenarFormulario()\n    console.log(localStorage)\n  }\n\n  buildForm(){\n    this.formUsuario = this.formBuilder.group({\n      FirstName: ['', Validators.required ],\n      LastName: ['', Validators.required ],\n      Email: ['', Validators.email ],\n      PhoneNumber:  [],\n      UserName: ['', Validators.required ],\n      Password: [null],\n      RoleId: [''],\n      Level: 1, \n      JoinDate: new Date,\n    });\n  }\n\n\n  onSubmit(){\n    let userId = this._activatedRoute.snapshot.params['Id']\n    this._accountService.actualizar(userId, this.formUsuario.value).subscribe(\n      result => {\n          alert(\"Usuario Actualizado\")\n      },\n      error => {\n\n      }\n\n    )\n\n\n  }\n\n  asociarUsuarioArea(){\n    let input = new FormData();\n    let areas = this.selection.selected; \n    let idUsuario = this.formUsuario.controls[\"UserName\"].value\n\n    if(!idUsuario){\n        console.log(\"no hay usuario para asignarle los datos\")\n    }\n\n    input.append('ApplicationUserId', idUsuario)\n    input.append(\"areas\", JSON.stringify(areas)) \n\n    this._accountService.actualizarAsociacionUsuarioArea(idUsuario, input)\n    .subscribe(\n      result => {\n        alert(\"Areas guardados\")\n      },\n      error => {\n        alert(JSON.stringify(error))\n      }\n    )\n\n  }\n\n  get f() { return this.formUsuario.controls; }\n\n  listarRoles(){\n    // Paso 1: Obtener la cadena JSON del localStorage\n    var userString = localStorage.getItem('user');\n\n    // Paso 2: Convertir la cadena JSON a un objeto JavaScript\n    var userObject = JSON.parse(userString);\n\n    // Paso 3: Acceder a la propiedad UserName dentro del objeto\n    var userName = userObject.UserName;\n\n    // Ahora 'userName' contiene el valor de la propiedad UserName\n    console.log(userName);  \n\n    if(userName==\"administrador@mineravallecentral.cl\") {\n      this._roleService.listar()\n      .subscribe(result => {\n        this.listadoRoles = result;\n      });\n    } else {\n      this._roleService.listar()\n      .subscribe(result => {\n        // Filtrar el resultado para excluir el rol con valor 1\n        \n        this.listadoRoles = result.filter(rol => rol.Id !== \"1\");\n      });\n    }\n  }\n\n  llenarFormulario(){\n    let userId = this._activatedRoute.snapshot.paramMap.get(\"Id\")\n    this._accountService.listarPorId(userId)\n    .subscribe(result => {\n      this.formUsuario.patchValue(result);   \n      this.formUsuario.controls['RoleId'].patchValue(result.RoleId) \n    })\n  }\n\n\n  listarAreas(){\n    this._areasService.listar()\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      if(result.length > 0){\n        this.listarAreasUsuario(this._activatedRoute.snapshot.paramMap.get(\"Id\"))\n      }\n    })\n\n  }\n\n  /**\n   * Recorre la tabla de áreas para seleccionar las áreas que tiene asignadas el usuario\n   * @param usuarioId id del usuario\n   */\n  private listarAreasUsuario(usuarioId: any){\n    this._areasService.listarAreasUsuario(usuarioId)\n    .subscribe(result => \n      result.forEach(_data => {\n        this.dataSource.data.forEach(row => { \n          if(JSON.stringify(row) === JSON.stringify(_data)){\n            this.selection.select(row);\n          }\n        })\n      })\n    )\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n       this.selection.clear() :\n       this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Editar usuario</h1>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formUsuario\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-3\">\n                        <label>Nombres</label>\n                        <input type=\"text\" formControlName=\"FirstName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FirstName.errors }\" />\n                        <div *ngIf=\"submitted && f.FirstName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.FirstName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Apellidos</label>\n                        <input type=\"text\" formControlName=\"LastName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.LastName.errors }\" />\n                        <div *ngIf=\"submitted && f.LastName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.LastName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                   \n                    <div class=\"form-group col-3\">\n                        <label>E-mail</label>\n                        <input type=\"text\" formControlName=\"Email\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\" />\n                        <div *ngIf=\"submitted && f.Email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Email.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Telefono</label>\n                        <input type=\"text\" formControlName=\"PhoneNumber\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.PhoneNumber.errors }\" />\n                        <div *ngIf=\"submitted && f.PhoneNumber.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.PhoneNumber.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Nombre Usuario</label>\n                        <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                        <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                        <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Password.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Rol de usuario </label>\n                        <select formControlName=\"RoleId\" class=\"form-control form-control-sm\">\n                            <option *ngFor=\"let data of listadoRoles\" [ngValue]=\"data.Id\" >{{ data.Name }}</option> <!--  -->\n                        </select>\n                    </div> \n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-6\">\n                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n                    </div>\n                </div> \n            </form>\n        </div>\n    </div> \n    <br>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-4 offset-3\">\n                <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                    <ng-container matColumnDef=\"Seleccionar\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                            </mat-checkbox>\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"Nombre\">\n                        <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                    </ng-container>\n                 \n                    <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n                </mat-table>\n            </div>\n        \n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n            </div>\n        </div>  \n    </div>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AccountService} from '../../services/account.service'\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { Account } from '../account'\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  tituloColumnas: string[] = ['Id', 'FirstName', 'LastName', 'UserName','Acciones']\n  dataSource: MatTableDataSource<Account>\n  public formData: FormGroup\n  Role: string\n  \n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  \n  constructor(\n          private _accountService: AccountService,\n          private _router: Router,\n          private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.listarDataUsuarios()\n    this.inicializaFormulario()\n\n    this.formData.get('filtro').valueChanges.subscribe((change) => {\n      change == '' ? this.listarDataUsuarios() : this.applyFilter(change)\n    });\n    \n  }\n\n  inicializaFormulario(){\n    this.formData = this.formBuilder.group({\n      filtro: [''],\n      TipoDocumentoId: ['']\n    });\n  }\n  \n\n  listarDataUsuarios(){\n    this.Role = localStorage.getItem('role')\n    this._accountService.listarDataUsuarios()\n      .subscribe(\n        result => {\n          this.dataSource = new MatTableDataSource(result)\n        },\n        error => {\n          console.log(error);\n        })\n  }\n\n  listarData () {\n    return this._accountService.listarDataUsuarios()\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n    })\n    \n  }\n\n\n\n  applyFilter(filterValue: string){\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  editarData(row: any){\n    this._router.navigate([\"app/account/editar/\", row.Id])\n  }\n\n  eliminarData(row: any){\n\n    this._accountService.eliminar(row.Id)\n    .subscribe(result => {\n      alert(result)\n      this.listarDataUsuarios()\n    })\n  }\n\n  agregarUsuario(){\n    this._router.navigate([\"app/account/crear\"])\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <h1>Gestión de usuarios</h1>\n            <div *ngIf=\"Role =='1'\">\n                <button mat-raised-button color=\"primary\" (click)=\"agregarUsuario()\">Agregar Cuenta usuario</button>\n            </div>\n        </div>\n    </div>\n    <br>    \n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <form [formGroup]=\"formData\">\n                <mat-form-field class=\"example-full-width\">\n                    <input matInput formControlName=\"filtro\" placeholder=\"Buscar usuario\" value=\"\">\n                  </mat-form-field>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Id. </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Id}} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"FirstName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Nombres</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.FirstName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"LastName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Apellidos </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.LastName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"UserName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> NombreUsuario </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.UserName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Email\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> E-mail </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Email }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Acciones\">\n                    \n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                        <button mat-icon-button color=\"primary\"  (click)=\"editarData(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"accent\" (click)=\"eliminarData(element)\">\n                            <mat-icon >delete</mat-icon>\n                        </button>\n                        \n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n        </div>\n    </div> \n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-create',\n  templateUrl: './role-create.component.html',\n  styleUrls: ['./role-create.component.css']\n})\nexport class RoleCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Crear rol</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.component.html',\n  styleUrls: ['./role-edit.component.css']\n})\nexport class RoleEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Editar rol</h1>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DocumentosCreateComponent } from './documentos/documentos-create/documentos-create.component';\nimport { AppComponent } from './app.component';\nimport { AreaComponent } from './area/area.component';\nimport { AreaCreateComponent } from './area/area-create/area-create.component';\nimport { AreaEditComponent } from './area/area-edit/area-edit.component';\nimport { DocumentosComponent } from './documentos/documentos.component';\nimport { AccountCreateComponent } from './account/account-create/account-create.component';\nimport { LoginComponent } from './login/login.component';\nimport { BibliotecaComponent } from './biblioteca/biblioteca.component';\nimport { DocumentoListComponent } from './documentos/documento-list/documento-list.component';\nimport { DocumentoEditComponent } from './documentos/documento-edit/documento-edit.component';\nimport { LoginLayoutComponent } from './layouts/login-layout/login-layout.component';\nimport { PageLayoutComponent } from './layouts/page-layout/page-layout.component';\nimport { AccountComponent } from './account/account/account.component';\nimport { AccountEditComponent } from './account/account-edit/account-edit.component';\nimport { InicioComponent } from './inicio/inicio/inicio.component';\nimport { AuthguardService } from './shared/authguard.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginLayoutComponent,  pathMatch: 'prefix',\n    children: [\n      { path: '', component: LoginComponent },\n    ]\n  },\n { \n    path:'app',\n    component: PageLayoutComponent,\n    children: [\n      // inicio\n      { path:'inicio', component: InicioComponent },\n      //\n      { path:'documento', component: DocumentosComponent },\n      { path:'documento/crear', component: DocumentosCreateComponent,canActivate: [AuthguardService]  },\n      { path:'documento/editar/:Id', component: DocumentoEditComponent, canActivate: [AuthguardService]  },\n      //areas\n      { path:'area', component: AreaComponent, canActivate: [AuthguardService]  },\n      { path:'area/crear', component: AreaCreateComponent, canActivate: [AuthguardService] },\n      { path:'area/editar/:Id', component: AreaEditComponent, canActivate: [AuthguardService]  },\n      //account\n      { path:'account', component: AccountComponent, canActivate: [AuthguardService] },\n      { path:'account/crear', component: AccountCreateComponent},\n      { path:'account/editar/:Id', component: AccountEditComponent },\n      //biblioteca\n      { path: 'biblioteca', component: BibliotecaComponent },\n      { path: 'biblioteca/:Id', component: BibliotecaComponent },\n      { path: 'biblioteca/de/:Id', component: BibliotecaComponent },\n      { path: 'biblioteca/de/:Id/:IdArea', component: BibliotecaComponent },\n      { path: 'biblioteca/do/:Id', component: BibliotecaComponent },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Area } from './area/area';\nimport { Account } from './account/account';\nimport { Router } from '@angular/router';\nimport { AccountService } from './services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  title = 'Angular';\n  areas: Area[]\n  currentUser: Account; \n  documentosEstructurales: any[]\n  otrosDestinos: any[]\n  enabled = true;\n\n  destinos = [\n      { \"Id\": 2, \"Nombre\": \"Auditorías\" },\n      { \"Id\": 3, \"Nombre\": \"No Conformidades\" },\n      { \"Id\": 4, \"Nombre\": \"Gestión Emergencias\" },\n      { \"Id\": 5, \"Nombre\": \"Documentos Transversales\" },\n      { \"Id\": 6, \"Nombre\": \"Manual Sistema Gestión Integrado (SGI)\" },\n      { \"Id\": 7, \"Nombre\": \"Política Corporativa MVC\" },\n      { \"Id\": 8, \"Nombre\": \"Notas Internas\" },\n      { \"Id\": 9, \"Nombre\": \"Formatos en blanco\" },\n      { \"Id\": 10, \"Nombre\": \"Documentos EE.CC.\" }\n  ]\n\n\n  constructor(\n    private _router: Router,\n    private _accountService: AccountService\n  ){\n    //this._accountService.currentUser.subscribe( x => this.currentUser = x);\n    \n  }\n\n  ngOnInit(){\n\n    if(this.currentUser){\n      this.areas = this.currentUser.Areas;\n      localStorage.setItem(\"UserRole\", this.currentUser.Role) \n    }\n\n    this.separarMenus()\n  }\n\n  cerrarSesion() {\n    this._accountService.logOut();\n    this._router.navigate(['/'])\n    localStorage.clear();\n  }\n\n  separarMenus(){\n    this.documentosEstructurales = this.destinos.filter(x => x.Id <= 8)\n    this.otrosDestinos = this.destinos.filter(x => x.Id > 8)\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { DocumentosCreateComponent } from './documentos/documentos-create/documentos-create.component';\nimport { DocumentosComponent} from '../app/documentos/documentos.component'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AccountCreateComponent } from './account/account-create/account-create.component';\nimport { AreaComponent } from './area/area.component';\nimport { AreaCreateComponent } from './area/area-create/area-create.component';\nimport { AreaEditComponent } from './area/area-edit/area-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { \n  MatIconModule, \n  MatSidenavModule,\n  MatListModule,\n  MatSnackBarModule, \n  MatDatepickerModule, \n  MatNativeDateModule, \n  MatInputModule, \n  MatFormFieldModule,\n  MatSelectModule,\n  MAT_DATE_LOCALE, \n  MatSlideToggleModule,\n  MatCardModule\n} from '@angular/material';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n//import { MatTableExporterModule } from 'mat-table-exporter';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { BibliotecaComponent } from './biblioteca/biblioteca.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { RoleCreateComponent } from './account/role-create/role-create.component';\nimport { RoleEditComponent } from './account/role-edit/role-edit.component';\nimport { DocumentoListComponent } from './documentos/documento-list/documento-list.component';\nimport { DocumentoEditComponent } from './documentos/documento-edit/documento-edit.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PageLayoutComponent } from './layouts/page-layout/page-layout.component';\nimport { LoginLayoutComponent } from './layouts/login-layout/login-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotifierModule } from \"angular-notifier\";\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { LoaderService } from './services/loader.service';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoaderInterceptor } from './interceptors/loader.interceptor';\nimport { AccountComponent } from './account/account/account.component';\nimport { AccountEditComponent } from './account/account-edit/account-edit.component';\nimport { JoyrideModule } from 'ngx-joyride'\nimport { from } from 'rxjs';\nimport { InicioComponent } from './inicio/inicio/inicio.component';\nimport { ListadoAreasComponent } from './components/listado-areas/listado-areas/listado-areas.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DocumentosCreateComponent,\n    DocumentosComponent,\n    AccountCreateComponent,\n    AreaComponent,\n    AreaCreateComponent,\n    AreaEditComponent,\n    BibliotecaComponent,\n    RoleCreateComponent,\n    RoleEditComponent,\n    DocumentoListComponent,\n    DocumentoEditComponent,\n    PageLayoutComponent,\n    LoginLayoutComponent,\n    LoginComponent,\n    AccountComponent,\n    AccountEditComponent,\n    InicioComponent,\n    ListadoAreasComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    //MatTableExporterModule por implementar,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatDatepickerModule,        // <----- import(must)\n    MatNativeDateModule,        // <----- import for date formating(optional)\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    LayoutModule,\n    NotifierModule.withConfig({\n      // Custom options in here\n      }),\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    NgxSkeletonLoaderModule,\n    JoyrideModule.forRoot(),\n  ],\n  exports: [\n    MatSidenavModule,\n    MatListModule\n  ],\n  providers: [\n    CookieService,\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-create',\n  templateUrl: './area-create.component.html',\n  styleUrls: ['./area-create.component.css']\n})\nexport class AreaCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Agregar área</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-edit',\n  templateUrl: './area-edit.component.html',\n  styleUrls: ['./area-edit.component.css']\n})\nexport class AreaEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Editar área</h1>","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AreaService } from '../services/area.service';\nimport { Area } from './area';\n\n\n@Component({\n  selector: 'app-area',\n  templateUrl: './area.component.html',\n  styleUrls: ['./area.component.css']\n})\nexport class AreaComponent implements OnInit {\n\n  listadoAreas: Area[]\n  tituloColumnas : string[]\n\n  constructor(private _areaService: AreaService) { }\n\n  ngOnInit() {\n    \n    this.listarAreas()\n    this.tituloTabla();\n  }\n\n  listarAreas(){\n    this._areaService.listar()\n    .subscribe(result => {\n      console.log(result)\n      this.listadoAreas = result\n    })\n  }\n\n  tituloTabla(){\n    this.tituloColumnas = [\"Id\",\"Nombre\",\"Descripcion\",\"Acciones\"]\n  }\n\n  editarData(element: any){\n    console.log(element)\n    return false;\n  }\n\n  eliminarData(element: any){\n    confirm(\"Confirmar eliminación de: \" + element.Nombre);\n    return false;\n  }\n\n}\n","<h1>Listado areas</h1>\n<div class=\"row\">\n    <div class=\"col-10 offset-1\">\n        <mat-table [dataSource]=\"listadoAreas\" class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"Id\">\n                <mat-header-cell *matHeaderCellDef> Id. </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"Nombre\">\n                <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"Descripcion\">\n                <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Acciones\">\n                <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> \n                    <button mat-icon-button color=\"primary\" (click)=\"editarData(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                    <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                        <mat-icon>delete</mat-icon>\n                    </button> -->\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n        </mat-table>\n    </div>\n</div>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Documento } from '../documentos/documento';\nimport { DocumentoService } from '../services/documento.service';\nimport { filter, map, mergeAll, mergeMap, pluck, tap } from 'rxjs/operators';\nimport { AreaService } from '../services/area.service';\nimport { Area } from '../area/area';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport { MatSnackBar} from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatInputModule, MatTableDataSource, MatPaginator, MatSort, MatTable } from '@angular/material';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { DestinoDocumentoService } from '../services/destino-documento.service';\n\n\n@Component({\n  selector: 'app-biblioteca',\n  templateUrl: './biblioteca.component.html',\n  styleUrls: ['./biblioteca.component.css']\n})\nexport class BibliotecaComponent implements OnInit {\n\n  public listadoDocumentos: Documento[]\n  public listadoAreas: Area[] \n  tituloColumnas: string[] = ['Codigo','Nombre', 'Descripción', 'Versión','Descargar']\n  public formData: FormGroup\n  usuario: any\n  title: string\n  Role: string\n  dataSource: MatTableDataSource<Documento>;\n  TipoDocumento = [\n    {\"Id\": 21 , \"Nombre\": \"Documentos\", \"Descripcion\": \"\"},\n    {\"Id\": 22 , \"Nombre\": \"Registros\", \"Descripcion\": \"\"}\n  ]\n\n \n  constructor(\n    private _documentoService: DocumentoService,\n    private _areaService: AreaService,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private _snackBar: MatSnackBar, \n    private _sanitizer: DomSanitizer,\n    private _matInput: MatInputModule,\n    private formBuilder: FormBuilder,\n    private _destinoDocumentoService: DestinoDocumentoService\n  ) { \n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  \n  ngOnInit() {\n    this.verificarUsuario()\n    this.inicializaFormulario()\n    \n\n    this.formData.get('filtro').valueChanges.subscribe((change) => {\n      change == '' ? this.verificarUsuario() : this.applyFilter(change)\n    });\n    //this.dataSource.paginator = this.paginator\n    \n    this.setTituloPagina()\n  }\n\n  \n  verificarUsuario(){\n    this.usuario = JSON.parse(localStorage.getItem(\"user\"));\n    this.Role = localStorage.getItem('role')\n    this.listarDocumentos();\n    return; \n  }\n\n\n  inicializaFormulario(){\n    this.formData = this.formBuilder.group({\n      filtro: [''],\n      TipoDocumentoId: ['']\n    });\n  }\n\n  \n  /**\n   * Lista todos los documentos en el sistema\n   */\n  listarDocumentos(){\n    //Separación y filtrado \n    // si como parámetro viene las áreas del usuario se filtra si aplican \n    const urlParams = this._router.url; \n    if(urlParams.includes(\"de\")){\n      if(this._activatedRoute.snapshot.params.IdArea){\n        this.listarDocumentosPorArea(this._activatedRoute.snapshot.params.IdArea)\n        return;\n      }else{\n        this.listarDocumentoPorDestino(this._activatedRoute.snapshot.params.Id)\n        return;\n      }\n    }\n\n    if(urlParams.includes(\"do\")){\n      this.listarDocumentoPorArea(this._activatedRoute.snapshot.params.Id)\n      return;\n    }\n\n    this._documentoService.listar()\n      .subscribe(result => {\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        this.dataSource = new MatTableDataSource(result)\n        this.dataSource.paginator = this.paginator\n      })\n  }\n\n  setTituloPagina(){\n    let sectionId = this._activatedRoute.snapshot.params.Id\n    if (typeof sectionId === 'undefined'){\n      this.title = 'Biblioteca Documental'\n      return\n    }\n\n    let id = this._activatedRoute.snapshot.paramMap.get('Id')\n    let idArea = this._activatedRoute.snapshot.paramMap.get('IdArea')\n\n    if(idArea == null){\n      this._destinoDocumentoService.listarPorId(this._activatedRoute.snapshot.params.Id).subscribe(\n        result => {\n            this.title = result.Nombre\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    }\n    else{\n      this._areaService.listarPorId(+idArea).subscribe(\n        result => {\n          this.title = \"Documentos \" + result.Nombre\n        },\n        error => {\n\n        }\n      )\n    }\n  }\n\n\n  listarDocumentoPorDestino(idDestino){\n    this._documentoService.listar()\n    .pipe(\n      map(result => {\n        //Ordenados por fecha de mayor a menor (documentos más viejos al último)\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.DestinoDocumentoId == idDestino)\n      })\n    )\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      this.dataSource.paginator = this.paginator\n    })\n  }\n\n\n  listarDocumentosPorArea(idArea){\n    this._documentoService.listar()\n    .pipe(\n      map(result => {\n        //Ordenados por fecha de mayor a menor (documentos más viejos al último)\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.Areas.some(ar => ar.Id == idArea))\n      })\n    )\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      this.dataSource.paginator = this.paginator\n    })\n\n  }\n\n\n  /**\n   * Descargar el documento seleccionado\n   * @param e \n   */\n  descargar(e){\n    this._documentoService.descargarDocumento(e.Id)\n      .subscribe(data =>{\n        let extension = this.listarExtensionPorMime(data.type)\n        let type = data.type;\n        var blob = new Blob([data], { type: type  })\n        saveAs(blob, e.Codigo + extension);\n      })\n  }\n  \n  \n  /** Remover esto es solo para las pruebas */\n  listarAreas(){\n    this._areaService.listar()\n    .subscribe(result => {\n      this.listadoAreas = result \n    } )\n  }\n\n\n  /**\n   * Lista los documentos que se asocian a un área cuando se suben \n   * @param areas Array del objeto tipo área\n   */\n  listarDocumentoPorAreas(areas: Area[]){\n    this._documentoService.listarPorArea(areas)\n    .subscribe(result => {\n      this.listadoDocumentos = result \n    })\n  }\n\n\n  /**\n   * Lista los documentos asociados a UN AREA la cual se define por el Id\n   * @param areaId Id del área\n   */\n  listarDocumentoPorArea(areaId: number){\n    let usuario = JSON.parse(localStorage.getItem(\"user\"));\n    let areas = usuario.Areas\n    this._documentoService.listarPorArea(areas)\n    .pipe(\n      map(result => { \n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.Areas.some( ar => ar.Id == areaId)) \n      })\n    )\n    .subscribe(result => {\n      this.listadoDocumentos = result \n    })\n  }\n\n\n  /**\n   * Aplica filtro básandose en el texto ingresado en el input de arriba de la tabla\n   * @param filterValue \n   */\n  applyFilter(filterValue: string){\n\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    this.dataSource.paginator = this.paginator\n  }\n\n\n  editar(elemento: any){\n    this._router.navigate([\"app/documento/editar/\", elemento.Id])\n  }\n\n  eliminar(elemento: any){\n    this._documentoService.eliminar(elemento).subscribe(result => {\n      alert(result);\n      this.verificarUsuario()\n    })\n  }\n\n\n  /***\n   * Redirige a la página para agregar un nuevo documento \n   */\n  agregarDocumento(){\n    //this._router.navigate(['documento/crear'])\n    this._router.navigateByUrl(\"app/documento/crear\").then( e =>{})\n  }\n\n  filtrarPorTipoDocumento(listadoTipoDocumentos: Documento[], tipoDocumentoId: number){\n    this._documentoService.listar().pipe(\n      map(data => data.filter(doc => doc.TipoDocumentoId == tipoDocumentoId ))\n    ).subscribe(result =>{ \n        this.listadoDocumentos = result\n    })\n  }\n\n  listarExtensionPorMime(mime: string){\n    const listadoMime = [\n      {\"extension\": \".pdf\" , \"mime\": \"application/pdf\" },\n      {\"extension\": \".xls\" , \"mime\": \"application/vnd.ms-excel\" },\n      {\"extension\": \".xlsx\", \"mime\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" },\n      {\"extension\": \".ppt\" , \"mime\": \"application/vnd.ms-powerpoint\" },\n      {\"extension\": \".pptx\", \"mime\": \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" },\n      {\"extension\": \".doc\" , \"mime\": \"application/msword\" },\n      {\"extension\": \".docx\", \"mime\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" },\n      {\"extension\": \".txt\", \"mime\": \"text/plain\" }\n    ]\n\n    return listadoMime.filter(x => x.mime == mime)[0].extension;\n  }\n\n\n  filtrarDocumentos(){\n    const areaId = this._activatedRoute.snapshot.params[\"Id\"]\n    const tipoDocumentoId = this.formData.get('TipoDocumentoId').value\n\n    const datos = this._documentoService.listar()\n\n    if(areaId && tipoDocumentoId){\n      datos.pipe(\n        map(data => data.filter(doc => doc.AreaId == areaId && doc.TipoDocumentoId == tipoDocumentoId))\n      )\n      .subscribe(result => {\n        this.listadoDocumentos = result;  \n      });\n    }\n\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12 \">\n            <br>\n            <h1>{{ title }}</h1>\n            <div *ngIf=\"Role =='1'\">\n                <button mat-raised-button color=\"primary\" (click)=\"agregarDocumento()\">Agregar Documento</button>\n            </div>\n        </div>\n    </div>\n    <br>    \n    <div class=\"row\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formData\">\n                <mat-form-field class=\"example-full-width\">\n                    <input matInput formControlName=\"filtro\" placeholder=\"Buscar documento\" value=\"\">\n                  </mat-form-field>\n            </form>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <table mat-table [dataSource]=\"dataSource\" style=\"min-width: 100%;\" >\n                <ng-container matColumnDef=\"Id\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Id </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Id }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Codigo\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Código Documento </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Codigo }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Nombre Documento </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripción\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Descripción </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.Descripcion\"></td>\n                </ng-container>\n                <ng-container matColumnDef=\"Versión\">\n                    <th mat-header-cell *matHeaderCellDef  class=\"text-center\"> Versión </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"text-center\"> {{element.Version }} </td>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Descargar\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Descargar </th>\n                    <td mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                        <button mat-icon-button color=\"primary\" (click)=\"descargar(element)\">\n                            <mat-icon>cloud_download</mat-icon>\n                        </button>\n                        <button *ngIf=\"Role == '1'\" mat-icon-button color=\"primary\" (click)=\"editar(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"Role == '1'\" mat-icon-button color=\"accent\" (click)=\"eliminar(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </td>\n                </ng-container>\n    \n                <tr mat-header-row *matHeaderRowDef=\"tituloColumnas\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></tr>\n            </table> \n            <mat-paginator [pageSizeOptions]=\"[ 10, 50, 100]\" showFirstLastButtons></mat-paginator>\n            <!-- <div style=\"background: #fff; padding: 5px;\">\n                <ngx-skeleton-loader\n                    count=\"10\"\n                    [theme]=\"{ \n                    'border-radius': '1px',\n                    height: '25px',\n                    'background-color': '#eee',\n                    'border-bottom': '1px solid #8a8a8a'\n                    }\"\n                ></ngx-skeleton-loader>\n            </div> -->\n        </div>\n    </div>\n    <br>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\n\n@Component({\n  selector: 'app-listado-areas',\n  templateUrl: './listado-areas.component.html',\n  styleUrls: ['./listado-areas.component.css']\n})\nexport class ListadoAreasComponent implements OnInit {\n  areas: Area[];\n\n\n  constructor(private _destinoDocumentoService: DestinoDocumentoService) { }\n\n  ngOnInit() {\n    this.areas = JSON.parse(localStorage.getItem('areas'));\n    this.areas.filter(ar => ar.Estado != false);\n  }\n}\n","\n<div class=\"dropdown\">\n    <button class=\"btn btn-warning dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      Mis accesos directos\n    </button>\n    \n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n    <ul style=\"list-style-type: none;\" class=\"accesos-directos\">\n        <li *ngFor=\"let area of areas\">\n            <a [routerLink]=\"['biblioteca/de/1/', area.Id]\">{{ area.Nombre }}</a>\n        </li>\n    </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Documento } from '../documento'\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AreaService } from 'src/app/services/area.service';\nimport { Area } from 'src/app/area/area';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { matFormFieldAnimations, MatTableDataSource } from '@angular/material';\nimport * as moment from 'moment';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { TipoDocumentoService } from 'src/app/services/tipo-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { TipoDocumento } from 'src/app/tipo-documento/tipo-documento';\n\n\n@Component({\n  selector: 'app-documento-edit',\n  templateUrl: './documento-edit.component.html',\n  styleUrls: ['./documento-edit.component.css']\n})\nexport class DocumentoEditComponent implements OnInit {\n\n  public formDocumento: FormGroup\n  public submitted = false\n  public listadoAreas: Area[]\n  editDocumento = new Documento\n  public documentoGuardado: Documento\n  dataSource: MatTableDataSource<Area> \n  \n  fileToUpload: File\n  selection = new SelectionModel<Area>(true, []);\n\n  listadoTipoDocumento: TipoDocumento[]\n  listadoDestinoDocumento: DestinoDocumento[]\n\n  tituloColumnas = ['Seleccionar','Nombre','Descripcion']\n  nombre = 'DocumentosCreate'\n  documentoId: any\n  \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _tipoDocumentoService: TipoDocumentoService\n  ) { }\n\n  ngOnInit() {\n    this.documentoId = this._activatedRoute.snapshot.paramMap.get(\"Id\")\n    this.buildForm()\n   \n    this.listarAreas()\n    this.listarDestinoDocumento()\n    this.listarTipoDocumento()\n\n    this.listarDocumentoPorId(this.documentoId);\n  }\n\n  private buildForm(){\n    this.formDocumento = this.formBuilder.group({\n      Codigo: ['', Validators.required],\n      Nombre: ['',Validators.required],\n      Descripcion: [''],\n      EsTransversal : false,\n      Version: [''],\n      TipoDocumentoId: ['',Validators.required],\n      FechaEmision: [],\n      FechaIngreso: [],\n      Archivo: [],\n      DestinoDocumentoId: []\n    })\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.dataSource = new MatTableDataSource(result)\n        this.listarAreasDocumento()\n      })\n  }\n\n\n  listarDocumentoPorId(documentoId: any){\n    \n    this._documentoService.listarPorId(documentoId)\n    .subscribe(result => {\n      this.formDocumento.patchValue(result);\n    })\n  }\n\n\n  listarAreasDocumento(){\n    if(this.documentoId){\n      this._documentoService.listarAreasDocumento(this.documentoId)\n        .subscribe(result => {\n          result.forEach(area => {\n              this.dataSource.data.forEach(row => { \n                if(JSON.stringify(row) === JSON.stringify(area)){\n                  this.selection.select(row)\n                }\n              })\n            })\n        })\n    }\n  }\n\n\n  listarDestinoDocumento(){\n    this._destinoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoDestinoDocumento = result;\n        },\n        error => {\n          console.error(error);\n        }\n      )\n  }\n\n\n  listarTipoDocumento(){\n    this._tipoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoTipoDocumento = result\n        },\n        error => {\n          console.error(error)\n        }\n      )\n\n  }\n\n  get f() { return this.formDocumento.controls; }\n\n\n  onFileSelect(event) {\n    if(event.target.files.length > 0){\n      let file = event.target.files[0]\n      this.fileToUpload = event.target.files[0]\n    }\n  }\n\n\n  onSubmit(){\n    const mensaje = '¿Estás seguro de que deseas actualizar el documento?';\n\n    if (this._documentoService.confirmar(mensaje)) {\n\n      const formData = new FormData(); \n      if(this.fileToUpload){\n        formData.append('Archivo', this.fileToUpload , this.fileToUpload.name )\n      }\n      formData.append('Id', this.documentoId)\n      formData.append('Codigo', this.formDocumento.get('Codigo').value)\n      formData.append('Nombre', this.formDocumento.get('Nombre').value)\n      formData.append('Descripcion', this.formDocumento.get('Descripcion').value)\n      formData.append('Version', this.formDocumento.get('Version').value)\n      formData.append('TipoDocumentoId', this.formDocumento.get('TipoDocumentoId').value)\n      formData.append('FechaEmision', this.formDocumento.get('FechaEmision').value)\n      formData.append('FechaIngreso', this.formDocumento.get('FechaIngreso').value)\n      formData.append('DestinoDocumentoId', this.formDocumento.get('DestinoDocumentoId').value)\n\n      this._documentoService.editar(formData)\n      .subscribe(result => {  })\n    }\n\n  }\n\n  cambiarEstado(){\n    this.listarAreas()\n  }\n\n\n  asociarDocumentoArea(){\n    let input = new FormData();\n\n    let areas = this.selection.selected;\n    input.append('documentoId', this._activatedRoute.snapshot.paramMap.get(\"Id\"))\n    input.append(\"areas\", JSON.stringify(areas)) \n    \n    this._documentoService.actualizarDocumentoArea(input)\n    .subscribe( \n        result => {\n          alert(JSON.stringify(result))\n          this.resetearFormulario()\n        },\n        error => {\n          alert(JSON.stringify(error))\n        }\n    )\n  }\n\n  resetearFormulario(){\n    this.formDocumento.reset();\n    this.selection = null\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1>Editar documentos</h1>\n    </div>\n    <br>\n    <div class=\"row\" >\n        <form [formGroup]=\"formDocumento\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-3\">\n                <label>Código</label>\n                <input type=\"text\" formControlName=\"Codigo\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Codigo.errors }\" />\n                <div *ngIf=\"submitted && f.Codigo.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Codigo.errors.required\">Error</div>\n                </div>\n            </div>\n            \n            <div class=\"form-group col-4\">\n                <label>Nombre documento</label>\n                <input type=\"text\" formControlName=\"Nombre\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Nombre.errors }\" />\n                <div *ngIf=\"submitted && f.Nombre.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Nombre.errors.required\">Error</div>\n                </div>\n            </div>\n            <div class=\"form-group col-5\">\n                    <label>Descripción</label>\n                    <input type=\"text\" formControlName=\"Descripcion\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Descripcion.errors }\" />\n                    <div *ngIf=\"submitted && f.Descripcion.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Descripcion.errors.required\">Error</div>\n                    </div>\n                </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Tipo Documento</label>\n                <select formControlName=\"TipoDocumentoId\" class=\"form-control form-control-sm\">\n                    <option *ngFor=\"let data of listadoTipoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                </select>\n            </div>\n            \n            <div class=\"form-group col-3\">\n                <label>Versión</label>\n                <input type=\"text\" formControlName=\"Version\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Version.errors }\" />\n                <div *ngIf=\"submitted && f.Version.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Version.errors.required\">Error</div>\n                </div>\n            </div> \n\n            <div class=\"form-group col-3\">\n                <label>Destino </label>\n                <select formControlName=\"DestinoDocumentoId\" class=\"form-control form-control-sm\">\n                    <option *ngFor=\"let data of listadoDestinoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                </select>\n            </div> \n        </div>\n        \n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Fecha Emision</label>\n                <!-- <input type=\"text\" formControlName=\"FechaEmision\" placeholder=\"dd-mm-aaaa\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FechaEmision.errors }\" />\n                <div *ngIf=\"submitted && f.FechaEmision.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.FechaEmision.errors.required\">Error</div>\n                </div>-->\n\n                <input type=\"text\" formControlName=\"FechaEmision\"  [matDatepicker]=\"FechaEmision\" placeholder=\"Fecha emisión\">\n                <mat-datepicker-toggle matSuffix [for]=\"FechaEmision\"></mat-datepicker-toggle>\n                <mat-datepicker #FechaEmision></mat-datepicker>\n            </div>\n        \n            <div class=\"form-group col-4\">\n                <label>Fecha Ingreso</label>\n                <!--\n                <input type=\"text\" formControlName=\"FechaIngreso\" placeholder=\"dd-mm-aaaa\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FechaIngreso.errors }\" />\n                <div *ngIf=\"submitted && f.FechaIngreso.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.FechaIngreso.errors.required\">Error</div>\n                </div>-->\n                <input type=\"text\" formControlName=\"FechaIngreso\" [matDatepicker]=\"FechaIngreso\"  placeholder=\"Fecha ingreso\">\n                <mat-datepicker-toggle matSuffix [for]=\"FechaIngreso\"></mat-datepicker-toggle>\n                <mat-datepicker #FechaIngreso></mat-datepicker>\n            </div>\n        </div>\n\n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Subir archivo </label>\n                <input type=\"file\"\n                        formControlName=\"Archivo\"\n                        accept=\"document/*\" \n                        (change)=\"onFileSelect($event)\"\n                        class=\"form-control form-control-sm\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.nombres.errors }\" />\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <button type=\"submit\" class=\"btn btn-success\">Actualizar</button>\n        </div>\n        </form>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Seleccionar\">\n                    <mat-header-cell *matHeaderCellDef>\n                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" >\n                        </mat-checkbox> \n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\">\n                        </mat-checkbox>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Acciones\">\n                    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> \n                        <button mat-icon-button color=\"primary\" >(click)=\"editarData(element)\" \n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                        </button> \n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarDocumentoArea()\">Guardar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Documento } from '../documento';\n\n@Component({\n  selector: 'app-documento-list',\n  templateUrl: './documento-list.component.html',\n  styleUrls: ['./documento-list.component.css']\n})\nexport class DocumentoListComponent implements OnInit {\n\n  listadoDocumentos:  Documento[]\n  tituloColumnas: ['Id', 'Codigo', 'Descripcion']\n  \n  constructor(private _documentoService: DocumentoService) { }\n\n  ngOnInit() {\n    this.listarDocumentos()\n  }\n\n  listarDocumentos(){\n    this._documentoService.listar()\n    .subscribe(data => { \n      this.listadoDocumentos = data \n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1>Listado Documentos</h1>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <input matInput placeholder=\"Filter\">\n\n            <mat-table [dataSource]=\"listadoDocumentos\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Codigo }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n        </div>\n    </div>\n    <!-- <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n        </div>\n    </div> -->\n</div>","import { Area } from '../area/area'\nimport { DocumentoAreas } from './documento-areas'\n\nexport class Documento {\n    Id: number\n    Codigo: string\n    Nombre: string \n    Descripcion: string\n    Direccion: string\n    Version: string\n    Archivo: File\n    AreaId: number\n    DestinoDocumentoId: number\n    TipoDocumentoId?: number\n    FechaEmision: Date\n    FechaIngreso: Date\n    Areas: Area[]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Documento } from '../documento'\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AreaService } from 'src/app/services/area.service';\nimport { Area } from 'src/app/area/area';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Router } from '@angular/router';\nimport { matFormFieldAnimations, MatSnackBar } from '@angular/material';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { TipoDocumento } from 'src/app/tipo-documento/tipo-documento';\nimport { TipoDocumentoService } from 'src/app/services/tipo-documento.service';\n\n@Component({\n  selector: 'app-documentos-create',\n  templateUrl: './documentos-create.component.html',\n  styleUrls: ['./documentos-create.component.css']\n})\n\n\nexport class DocumentosCreateComponent implements OnInit {\n \n  public formDocumento: FormGroup\n  public submitted = false\n  public listadoAreas: Area[]\n  insertDocumento = new Documento\n  public paso1 = true; \n  public paso2 = false;\n  //public documentoGuardado: Documento\n  documentoGuardadoId: any\n  \n  fileToUpload: File = null\n  selection = new SelectionModel<Area>(true, []);\n\n  listadoTipoDocumento: TipoDocumento[];\n  listadoDestinoDocumento : DestinoDocumento[];\n  tituloColumnas = ['Seleccionar','Nombre','Descripcion']\n  nombre = 'DocumentosCreate'\n  \n  \n  constructor( \n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _matSnack: MatSnackBar,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _tipoDocumentoService: TipoDocumentoService\n    ) { \n  }\n  \n\n  ngOnInit() {\n   this.buildForm()\n   this.listarAreas()\n   this.listarDestinoDocumento()\n   this.listarTipoDocumento()\n  }\n\n\n  private buildForm(){\n    this.formDocumento = this.formBuilder.group({\n      Codigo: ['', Validators.required],\n      Nombre: ['',Validators.required],\n      Descripcion: [''],\n      EsTransversal : false,\n      Version: [''],\n      TipoDocumentoId: ['',Validators.required],\n      FechaEmision: new Date,\n      FechaIngreso: new Date,\n      Archivo: [],\n      DestinoDocumentoId: []\n    })\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.listadoAreas = result\n      })\n  }\n\n  listarDestinoDocumento(){\n    this._destinoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoDestinoDocumento = result;\n        },\n        error => {\n          console.error(error);\n        }\n      )\n  }\n\n\n  listarTipoDocumento(){\n    this._tipoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoTipoDocumento = result\n        },\n        error => {\n          console.error(error)\n        }\n      )\n\n  }\n\n\n  get f() { return this.formDocumento.controls; }\n\n\n  onFileSelect(event) {\n    if(event.target.files.length > 0){\n      let file = event.target.files[0]\n      this.fileToUpload = event.target.files[0]\n    }\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.listadoAreas.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    if(this.selection.selected != []){\n      const numSelected = this.selection.selected.length;\n      const numRows = this.listadoAreas.length;\n      return numSelected === numRows;\n    }\n  }\n\n\n  onSubmit(){\n    const mensaje = '¿Estás seguro de que deseas crear el documento?';\n\n    if (this._documentoService.confirmar(mensaje)) {\n\n      const formData = new FormData(); \n      formData.append('Archivo',  this.fileToUpload, this.fileToUpload.name)\n      formData.append('Codigo', this.formDocumento.get('Codigo').value)\n      formData.append('Nombre', this.formDocumento.get('Nombre').value)\n      formData.append('Descripcion', this.formDocumento.get('Descripcion').value)\n      formData.append('Version', this.formDocumento.get('Version').value)\n      formData.append('TipoDocumentoId', this.formDocumento.get('TipoDocumentoId').value)\n      formData.append('FechaEmision', this.formDocumento.get('FechaEmision').value)\n      formData.append('FechaIngreso', this.formDocumento.get('FechaIngreso').value)\n      formData.append('DestinoDocumentoId', this.formDocumento.get('DestinoDocumentoId').value)\n      \n          \n      this._documentoService.guardar(formData)\n      .subscribe(result => { \n        this._matSnack.open(\"Agregado con Id\" + result, \"\",{\n          duration: 5000\n        } )\n        this.documentoGuardadoId = result \n        this.cambiarVistas();\n      },\n      error =>{\n        console.log(error);\n      })\n    }\n  }\n  \n\n  cambiarEstado(){\n    this.cambiarVistas()\n    this.listarAreas()\n  }\n\n\n  asociarDocumentoArea(){\n    let input = new FormData();\n    let areas = this.selection.selected;\n    if(!this.documentoGuardadoId || this.documentoGuardadoId == 0){\n      alert(\"Error no se ha registrado el Id, favor verificar si se ingreso el documento \\n si no realice la operación nuevamente\")\n      return\n    }\n\n    input.append('documentoId', this.documentoGuardadoId.toString())\n    input.append(\"areas\", JSON.stringify(areas)) \n    \n    this._documentoService.asociarDocumentoArea(input)\n    .subscribe( \n        result => {\n          alert(JSON.stringify(result))\n          this.resetearFormulario()\n        },\n        error => {\n          alert(JSON.stringify(error))\n        }\n    )\n  }\n\n\n  resetearFormulario(){\n    this.cambiarVistas()\n    this.formDocumento.reset();\n    this.selection = null\n  }\n\n\n  cambiarVistas(){\n    this.paso1 = !this.paso1\n    this.paso2 = !this.paso2\n  }\n\n  volverUsuario(){\n    this._router.navigate([\"app/account\"])\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <h1>Agregar documentos</h1>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\" [hidden]=\"!paso1\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formDocumento\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>Código</label>\n                    <input type=\"text\" formControlName=\"Codigo\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Codigo.errors }\" />\n                    <div *ngIf=\"submitted && f.Codigo.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Codigo.errors.required\">Error</div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group col-4\">\n                    <label>Nombre documento</label>\n                    <input type=\"text\" formControlName=\"Nombre\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Nombre.errors }\" />\n                    <div *ngIf=\"submitted && f.Nombre.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Nombre.errors.required\">Error</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-4\">\n                        <label>Descripción</label>\n                        <input type=\"text\" formControlName=\"Descripcion\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Descripcion.errors }\" />\n                        <div *ngIf=\"submitted && f.Descripcion.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Descripcion.errors.required\">Error</div>\n                        </div>\n                    </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>Tipo Documento</label>\n                    <select formControlName=\"TipoDocumentoId\" class=\"form-control form-control-sm\">\n                        <option *ngFor=\"let data of listadoTipoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                    </select>\n                </div>\n                \n                <div class=\"form-group col-4\">\n                    <label>Versión</label>\n                    <input type=\"text\" formControlName=\"Version\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Version.errors }\" />\n                    <div *ngIf=\"submitted && f.Version.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Version.errors.required\">Error</div>\n                    </div>\n                </div> \n\n                <div class=\"form-group col-4\">\n                    <label>Destino </label>\n                    <select formControlName=\"DestinoDocumentoId\" class=\"form-control form-control-sm\">\n                        <option *ngFor=\"let data of listadoDestinoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                    </select>\n                </div> \n            </div>\n            \n            <div class=\"form-row\">\n                <div class=\"form-group col-5\">\n                    <label>Fecha Emision</label>\n                    <input type=\"text\" formControlName=\"FechaEmision\" [matDatepicker]=\"FechaEmision\" placeholder=\"Fecha emisión\">\n                    <mat-datepicker-toggle matSuffix [for]=\"FechaEmision\"></mat-datepicker-toggle>\n                    <mat-datepicker #FechaEmision></mat-datepicker>\n                </div>\n            \n                <div class=\"form-group col-5\">\n                    <label>Fecha Ingreso</label>\n                    <input type=\"text\" formControlName=\"FechaIngreso\" [matDatepicker]=\"FechaIngreso\" placeholder=\"Fecha ingreso\">\n                    <mat-datepicker-toggle matSuffix [for]=\"FechaIngreso\"></mat-datepicker-toggle>\n                    <mat-datepicker #FechaIngreso></mat-datepicker>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-6\">\n                    <label>Subir archivo </label>\n                    <input type=\"file\"\n                            formControlName=\"Archivo\"\n                            accept=\"document/*\" \n                            (change)=\"onFileSelect($event)\"\n                            class=\"form-control form-control-sm\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.nombres.errors }\" />\n                </div>\n            </div>\n\n            <div class=\"form-group col-6\">\n                <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n            </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"row\" [hidden]=\"!paso2\">\n        <div class=\"col-12\">\n            <mat-table [dataSource]=\"listadoAreas\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Seleccionar\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                        </mat-checkbox>\n                    </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\">\n                        </mat-checkbox>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Acciones\">\n                    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> \n                        <button mat-icon-button color=\"primary\" ><!-- (click)=\"editarData(element)\" -->\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button> -->\n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n            <div class=\"form-group col-6\">\n                <button type=\"button\" [disabled]=\"!documentoGuardadoId\" class=\"btn btn-success\" (click)=\"asociarDocumentoArea()\">Guardar</button>\n            </div>\n        </div>\n    </div>  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DocumentoService } from '../services/documento.service';\nimport { Documento } from './documento';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatSnackBar, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-documentos',\n  templateUrl: './documentos.component.html',\n  styleUrls: ['./documentos.component.css']\n})\nexport class DocumentosComponent implements OnInit {\n  listadoDocumentos: any[]\n  dataSource = new MatTableDataSource(this.listadoDocumentos);\n  displayedColumns: [\"Id\",\"Codigo\",\"Descripcion\"]\n  checked =false\n\n  constructor(\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _snackBar: MatSnackBar, \n    private _sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    this.listarDocumentos()\n  }\n\n  /**\n   *\n   */\n  listarDocumentos(){\n    this._documentoService.listar()\n    .subscribe(data => { \n      console.log(data);\n      this.listadoDocumentos = data;\n    })\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <h1>Listado documentos</h1>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <mat-table #table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef> Id Documento</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.Id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Codigo\">\n                        <mat-header-cell *matHeaderCellDef> Código Documento</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.Codigo }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                        <mat-header-cell *matHeaderCellDef> Descripcion Documento</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n            </mat-table>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  areas: Area[]\n  constructor() { }\n\n  dataSource: MatTableDataSource<Area>;\n  tituloColumnas: string[] = ['area','ir']\n\n  ngOnInit() {\n    this.listarAreas()\n  }\n\n  listarAreas(){\n    this.areas = JSON.parse(localStorage.getItem('areas'))\n    this.areas = this.areas.filter(item => item.Estado == true);\n    this.dataSource = new MatTableDataSource(this.areas)\n  }\n}\n","<div class=\"container-fluid\">\n   <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Página de inicio</h1>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            \n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n           <h2>Mis áreas de trabajo</h2> \n        </div>\n    </div>\n    \n    <div class=\"col-12\">\n        <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"area\">\n                <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Area </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ir\">\n                <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Ir </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                    <a routerLink=\"/app/biblioteca/de/1/{{ element.Id}}\"><mat-icon>forward</mat-icon></a>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"tituloColumnas\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></tr>\n        </table> \n    </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\n\nimport { LoaderService } from '../services/loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n    constructor(public loaderService: LoaderService) { }\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.loaderService.show();\n        return next.handle(req).pipe(\n            finalize(() => this.loaderService.hide())\n        );\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.css']\n})\nexport class LoginLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { AccountService } from 'src/app/services/account.service';\nimport { Router } from '@angular/router';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { filter, map } from 'rxjs/operators';\nimport { JoyrideService } from 'ngx-joyride';\nimport { MatPaginator} from '@angular/material/paginator';\nimport { MatSort} from '@angular/material/sort';\nimport { CookieService} from 'ngx-cookie-service'\n\n@Component({\n  selector: 'app-page-layout',\n  templateUrl: './page-layout.component.html',\n  styleUrls: ['./page-layout.component.css']\n})\nexport class PageLayoutComponent implements OnInit {\n  \n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n\n  title = 'Angular';\n  areas: Area[]\n  destinosDocumentos: DestinoDocumento[]\n  currentUser: Account; \n  documentosEstructurales: any[]\n  rolUsuario: string;\n  destinosPrimarios = []\n  destinosSecundarios = []\n  \n  constructor(\n    private _router: Router,\n    private _accountService: AccountService,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _cookieService: CookieService\n  ) { \n    \n  }\n\n\n  ngOnInit() {\n    var usuario = localStorage.getItem('user')\n    var role = localStorage.getItem('role')\n    this.areas = JSON.parse(localStorage.getItem('areas'))\n    if(usuario){\n      this.rolUsuario = role\n      this.separarMenus()\n    }\n    this.areas = this.areas.filter(ar => ar.Estado != false)\n  }\n\n  /**\n   * \n   */\n  separarMenus(){\n    //this.documentosEstructurales = this.destinos.filter(x => x.Id <= 8)\n    this._destinoDocumentoService.listar()\n    .pipe(\n      map(result => { return result.filter(data => data.Estado == true) }))\n    .subscribe(\n      result=>{\n        this.destinosPrimarios = result.filter(data => data.Item == 'da').sort((a,b) => a.Nombre.localeCompare(b.Nombre))\n        this.destinosSecundarios = result.filter(y => y.Item == \"md\").filter(item => item.Nombre != 'Documentos por área' ).sort((a,b) => a.Nombre.localeCompare(b.Nombre))\n      },\n      error=>{\n        console.error(error)\n      }\n    )\n  }\n\n  \n\n  /**\n   * \n   */\n  cerrarSesion(){\n    localStorage.clear();\n    this._accountService.logOut();\n    this._router.navigate(['']);\n    \n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row header-box d-flex flex-row\">\n        <div class=\"col-2\">\n            <img src=\"./assets/img/logo-nuevo-mvc.png\" class=\"img-fluid\"/>\n        </div>\n        <div class=\"col-5 offset-1 align-self-center\">\n            <h2> <a routerLink=\"['inicio']\">Documentos Operacionales</a> <a routerLink=\"['inicio']\" class=\"destacado\"> MVC</a></h2> \n        </div>\n        <div class=\"col-2 text-right align-self-center\">\n            <app-listado-areas></app-listado-areas>\n        </div>\n        <div class=\"col-2 align-self-center\">\n            <a (click)=\"cerrarSesion()\" href=\"#\" class=\"float-right btn btn-mvc\">\n                <mat-icon>exit_to_app</mat-icon>Cerrar Sesión \n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2 side-box\" style=\"overflow:auto\">\n            <mat-nav-list>\n                <div *ngIf=\"rolUsuario == '1'\">\n                    <h4>Menú</h4>\n                    <p class=\"texto-menu\">Gestión Usuarios</p>\n                    <a mat-list-item [routerLink]=\"['account']\" [routerLinkActive]=\"['active']\">\n                        <mat-icon>assignment_ind</mat-icon>\n                        <span class=\"nav-caption\">Usuarios</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\" title=\"Biblioteca General\">Documentos</p>\n                    <a mat-list-item [routerLink]=\"['biblioteca']\" [routerLinkActive]=\"['active']\"\n                        text=\"Acá están todos los documentos del sistema\">\n                        <mat-icon>account_balance</mat-icon>\n                        <span class=\"nav-caption\">Biblioteca documental</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\"\n                        title=\"Documentos aplicables a MVC\" \n                        text=\"Documentos de uso común en nuestras labores\">Documentos Aplicables MVC</p>\n                    <a mat-list-item routerLink=\"biblioteca/de/{{ destino.Id }}\" *ngFor=\"let destino of destinosPrimarios\" style=\"font-size:12px\">\n                        <mat-icon>navigate_next</mat-icon><span class=\"nav-caption\">{{ destino.Nombre }}</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\"\n                        title=\"Documentos aplicables a MVC\" \n                        text=\"Documentos de uso común en nuestras labores\">Más Documentos</p>\n                    <a mat-list-item routerLink=\"biblioteca/de/{{ destino.Id }}\" *ngFor=\"let destino of destinosSecundarios\" style=\"font-size:12px\">\n                        <mat-icon>keyboard_arrow_right</mat-icon><span class=\"nav-caption\">{{ destino.Nombre }}</span>\n                    </a>\n                </div>\n            </mat-nav-list>\n        </div>\n        <div class=\"col-10 content-box\" >\n            <div class=\"row\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n    <div class=\"row row-footer\" >\n        Minera Valle Central \n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../services/account.service';\nimport { RouteConfigLoadEnd } from '@angular/router';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\nimport { LoaderService } from '../services/loader.service'\nimport { Subject } from 'rxjs';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public formLogin: FormGroup\n  submitted = false\n  userLogged = false\n  public isDisabled = true;\n   mensajeError: string = '' \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _accountService: AccountService,\n    private _router:Router,\n    private _snackBar: MatSnackBar\n    ) {    }\n\n\n  ngOnInit() {\n    this.buildForm()\n  }\n\n  buildForm(){\n    this.formLogin = this.formBuilder.group({\n      UserName: ['', Validators.required ],\n      Password: ['', Validators.required ],\n    });\n  }\n\n  get f() { return this.formLogin.controls; }\n\n  onSubmit(){\n    this.mensajeError = ''\n    this._accountService.validateUser(this.formLogin.value)\n    .subscribe(\n      result => {\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        localStorage.setItem(\"role\", result.Role );\n        localStorage.setItem(\"areas\", JSON.stringify(result.Areas));\n        localStorage.setItem(\"token\", result.Token)\n        this._router.navigate([\"app/inicio\"])\n      },\n      error => {\n        this.mensajeError = error.error.Message\n      }\n    )\n  }\n}","<div class=\"row h-100\">\n    <div class=\"col-8 f-height\">\n        <div class=\"row\">\n            <div class=\"col-12 d-flex justify-content-center\">\n                <img src=\"assets/img/bienvenido.png\" class=\"texto-superior\"/>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-12 mx-auto d-block\">\n                <img src=\"assets/img/subtexto.png\" class=\"img-fluid second-row\" />\n            </div>\n        </div>\n    </div>\n    <div class=\"col-4 f-height border border-left-dark\">\n        <br><br>\n        <form [formGroup]=\"formLogin\"  (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\" >\n                <div class=\"col-12\">\n                    <h3>Iniciar Sesión</h3>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"mensajeError != ''\">\n                <div class=\"col-12\">\n                    <div class=\"alert alert-danger\" >\n                        {{ mensajeError }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-9\">\n                    <label>Correo electrónico</label>\n                    <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                    <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-9\">\n                    <label>Password</label>\n                    <input type=\"password\" id=\"password\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                    <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Password.errors.required\">Error</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group col-6\">\n                    <button type=\"submit\" [disabled]=\"!formLogin.valid\"  id=\"ingresar\" class=\"btn btn-success\">Ingresar</button>\n                </div>\n            </div> \n        </form>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\" class=\"footer-height\">&nbsp; Ti MVC</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Account } from '../account/account'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  _apiUrl: string  = environment.apiUrl;\n\n  headers = {\n    headers: new HttpHeaders()\n      .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n  }\n  \n  constructor(private _http: HttpClient) {}\n\n  guardar(account: Account){\n    const _header = new HttpHeaders().set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.post<string>(this._apiUrl + 'account/createUser/', account, { headers: _header}  )\n  }\n\n  \n  actualizar(id: any, account: Account){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.put<Account>(this._apiUrl + \"account/update/\" + id, account, { headers: _header})\n  }\n\n  \n  eliminar(id: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.delete<Account>(this._apiUrl + \"account/delete/\" + id, { headers: _header} )\n  }\n\n  \n  listar(){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account[]>(this._apiUrl + \"account\" ,{ headers: _header})\n  }\n\n  \n  listarPorId(id: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account>(this._apiUrl + \"account/porid/\" + id , { headers: _header})\n  }\n\n\n  listarPorNombreUsuario(userName: string){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account>(this._apiUrl + \"account/pornombre/\" + userName, { headers: _header} )\n  }\n\n\n  listarDataUsuarios(){\n    //console.log(localStorage.getItem(\"token\"))\n    const _header = new HttpHeaders()\n        .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account[]>(this._apiUrl + \"account/listardatausuarios\", { headers: _header })\n\n  }\n\n\n  asociarUsuarioArea(input: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.post(this._apiUrl + \"account/asociarusuarioarea/\" , input, { headers: _header})\n  }\n\n  actualizarAsociacionUsuarioArea(idUsuario: string, input: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.put(this._apiUrl + \"account/actualizarasociacion/\" + idUsuario , input, { headers: _header})\n  }\n\n  validateUser(formLogin: any){\n    return this._http.post<any>(this._apiUrl + \"account/signin\", formLogin); \n  }\n\n  logOut(){\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n//import { HttpClient } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment';\nimport { Area } from '../area/area';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n  private apiUrl = environment.apiUrl;\n  \n  constructor(private _http: HttpClient) {}\n\n\n  /**\n   * Lista todas las áreas\n   */\n  listar(){\n    return this._http.get<Area[]>(this.apiUrl + \"area\")\n  }\n\n\n  /**\n   * Lista el área asociada a un Id\n   * @param Id Id del área\n   */\n  listarPorId(Id: number){\n    return this._http.get<Area>(this.apiUrl +\"/area/\" +Id)\n  }\n\n\n  /**\n   * Lista las áreas asociadas a un nombre\n   * @param nombre nombre del área consultada\n   */\n  listarPorNombre(nombre: string){\n    return this._http.get<Area[]>(this.apiUrl + \"/area/\" + nombre)\n  }\n\n  listarAreasUsuario(idUsuario: string){\n    return this._http.get<Area[]>(this.apiUrl + \"/area/poridusuario/\" + idUsuario)\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { DestinoDocumento } from '../destino-documento/destino-documento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestinoDocumentoService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _httpClient: HttpClient) { \n  }\n\n  public guardar(){}\n  public editar(){}\n  public eliminar(){}\n\n  public listar(){\n    return this._httpClient.get<DestinoDocumento[]>(this.apiUrl +\"destinodocumento\")\n  }\n\n  public listarPorId(Id: any){\n    return this._httpClient.get<DestinoDocumento>(this.apiUrl +\"destinodocumento/\" + Id)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Documento } from '../documentos/documento';\nimport { environment } from 'src/environments/environment';\nimport { Area } from '../area/area';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentoService {\n\n  apiUrl: string = environment.apiUrl\n\n  header = {\n    headers: new HttpHeaders()\n      .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\") )\n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  confirmar(mensaje: string): boolean {\n    return window.confirm(mensaje);\n  }\n\n  guardar(documento: any){\n    return this._http.post<any>(this.apiUrl + \"documento\", documento, this.header)\n  }\n\n  editar(documento: any){\n    return this._http.put<Documento>(this.apiUrl + \"documento\", documento, this.header)\n  }\n  \n  eliminar(documento: Documento){\n    return this._http.delete<Documento>(this.apiUrl +\"documento/\" + documento.Id, this.header)\n  }\n  \n  /**\n   * Muestra todos los documentos del sistema\n   */\n  listar(){\n    return this._http.get<Documento[]>(this.apiUrl +\"documento\", this.header)\n  }\n\n  /**\n   * Muestra un documento con el Id pasado por parámetro\n   * @param id Id del documento\n   */\n  listarPorId(id: any){\n    return this._http.get<Documento>(this.apiUrl +\"documento/\"+ id, this.header)\n  }\n\n\n  /**\n   * Retorna el documento asociado al código\n   * @param codigo Código del documento\n   */\n  listarPorCodigo(codigo: string){\n    return this._http.get<Documento>(this.apiUrl +\"documento/\"+ codigo, this.header)\n  }\n\n\n  /**\n   * Guarda el documento y el área en la tabla de la base  de datos\n   * @param formData \n   */\n  asociarDocumentoArea(formData: any){\n    return this._http.post(this.apiUrl + \"documento/asociar\", formData, this.header )\n  }\n\n  /**\n   * Actualiza un documento y el área en la tabla de la base  de datos\n   * @param formData \n   */\n  actualizarDocumentoArea(formData: any){\n    return this._http.put<any>(this.apiUrl + \"documento/actualizarasociacion\", formData, this.header )\n  }\n\n\n  /**\n   * Lista por el array de areas que son pasadas por parámetro \n   * @param areas array de areas\n   */\n  listarPorArea(areas: Area[]){\n    //agregar parámetros\n    let httpParams = new HttpParams(); \n    httpParams = httpParams.append('areas', JSON.stringify(areas));\n    return this._http.get<Documento[]>(this.apiUrl + \"documento/porarea\", {  params: httpParams , headers: new HttpHeaders().set('Authorization',  'Bearer ' + localStorage.getItem(\"token\") )} )\n  }\n\n\n  descargarDocumento(Id: number){\n    return this._http.get(this.apiUrl + \"documento/descargar/\"+ Id, {\n      headers: ({\n        Authorization: 'Bearer ' + localStorage.getItem(\"token\"),\n      })\n      , responseType: 'blob' }); \n  }\n\n  listarAreasDocumento(documentoId: any){\n    return this._http.get<Area[]>(this.apiUrl + \"documento/areas/\"+ documentoId, this.header); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor() { }\n\n  isLoading = new Subject<boolean>();\n  show() {\n      this.isLoading.next(true);\n  }\n  hide() {\n      this.isLoading.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Role } from '../role/role';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _http: HttpClient) { }\n\n  listar(){\n    return this._http.get<Role[]>(this.apiUrl +\"role\")\n  }\n\n  listarPorId(Id: number){\n    return this._http.get<Role[]>(this.apiUrl +\"role/\" + Id  )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { TipoDocumento } from '../tipo-documento/tipo-documento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoDocumentoService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _httpClient: HttpClient) { }\n\n  guardar(tipoDocumento: any){\n    return this._httpClient.post<any>(this.apiUrl + \"tipodocumento\", tipoDocumento)\n  }\n\n  editar(tipoDocumento: any){\n    return this._httpClient.put<any>(this.apiUrl + \"tipodocumento\", tipoDocumento)\n  }\n  \n  eliminar(tipoDocumento: any){\n    return this._httpClient.delete<any>(this.apiUrl +\"tipodocumento/\" + tipoDocumento.Id)\n  }\n  \n  /**\n   * Muestra todos los documentos del sistema\n   */\n  listar(){\n    return this._httpClient.get<TipoDocumento[]>(this.apiUrl +\"tipodocumento\")\n  }\n\n  /**\n   * Muestra un documento con el Id pasado por parámetro\n   * @param id Id del documento\n   */\n  listarPorId(id: any){\n    return this._httpClient.get<TipoDocumento>(this.apiUrl +\"tipodocumento/\"+ id)\n  }\n\n\n  /**\n   * Retorna el documento asociado al código\n   * @param codigo Código del documento\n   */\n  listarPorCodigo(codigo: string){\n   \n  }\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate\n{\n  constructor(private _router: Router) { }\n\n  canActivate() {\n    const jwtHelper = new JwtHelperService();\n    let tokenParam = JSON.parse(localStorage['user'])\n\n    //verificar  si el localstorage contiene data\n    if(localStorage === null)\n    {\n      // console.log(\"No storage data\")\n      localStorage.clear();\n      this._router.navigate(['/']);\n    }\n\n    //verificar si el token expiró\n    if(jwtHelper.isTokenExpired(tokenParam['Token']))\n    {\n      // console.log(\"Token vencido\")\n      localStorage.clear();\n      this._router.navigate(['/']);\n    }\n    return true;\n  }\n}\n","export const environment = {\n    production: false,\n    apiUrl:'http://192.168.2.150/sgi_api/api/'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}