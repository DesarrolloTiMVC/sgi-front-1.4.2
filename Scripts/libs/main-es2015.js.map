{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account-create/account-create.component.ts","./src/app/account/account-create/account-create.component.html","./src/app/account/account-edit/account-edit.component.ts","./src/app/account/account-edit/account-edit.component.html","./src/app/account/account/account.component.ts","./src/app/account/account/account.component.html","./src/app/account/role-create/role-create.component.ts","./src/app/account/role-create/role-create.component.html","./src/app/account/role-edit/role-edit.component.ts","./src/app/account/role-edit/role-edit.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/area/area-create/area-create.component.ts","./src/app/area/area-create/area-create.component.html","./src/app/area/area-edit/area-edit.component.ts","./src/app/area/area-edit/area-edit.component.html","./src/app/area/area.component.ts","./src/app/area/area.component.html","./src/app/biblioteca/biblioteca.component.ts","./src/app/biblioteca/biblioteca.component.html","./src/app/components/listado-areas/listado-areas/listado-areas.component.ts","./src/app/components/listado-areas/listado-areas/listado-areas.component.html","./src/app/documentos/documento-edit/documento-edit.component.ts","./src/app/documentos/documento-edit/documento-edit.component.html","./src/app/documentos/documento-list/documento-list.component.ts","./src/app/documentos/documento-list/documento-list.component.html","./src/app/documentos/documento.ts","./src/app/documentos/documentos-create/documentos-create.component.ts","./src/app/documentos/documentos-create/documentos-create.component.html","./src/app/documentos/documentos.component.ts","./src/app/documentos/documentos.component.html","./src/app/inicio/inicio/inicio.component.ts","./src/app/inicio/inicio/inicio.component.html","./src/app/interceptors/loader.interceptor.ts","./src/app/layouts/login-layout/login-layout.component.ts","./src/app/layouts/login-layout/login-layout.component.html","./src/app/layouts/page-layout/page-layout.component.ts","./src/app/layouts/page-layout/page-layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/account.service.ts","./src/app/services/area.service.ts","./src/app/services/destino-documento.service.ts","./src/app/services/documento.service.ts","./src/app/services/loader.service.ts","./src/app/services/role.service.ts","./src/app/services/tipo-documento.service.ts","./src/app/shared/authguard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AreaService } from 'src/app/services/area.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../../services/account.service';\nimport { Area } from 'src/app/area/area';\nimport { Account } from '../account'\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Role } from 'src/app/role/role';\nimport { RoleService } from 'src/app/services/role.service';\nimport { MatTableDataSource } from '@angular/material';\n \n@Component({\n  selector: 'app-account-create',\n  templateUrl: './account-create.component.html',\n  styleUrls: ['./account-create.component.css']\n})\nexport class AccountCreateComponent implements OnInit {\n\n  public formUsuario: FormGroup\n  public auxUsuario: Account\n  public submitted = false \n  public listadoAreas: Area[]\n  public listadoRoles: Role[]\n  public IdUsuarioGuardado: string\n  \n  selection = new SelectionModel<Area>(true, []);\n\n  dataSource: MatTableDataSource<Area> \n  tituloColumnas = ['Seleccionar','Nombre']\n  public paso1 = true\n  public paso2 = false\n  public title = 'my-awesome-app'\n\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _accountService: AccountService,\n    private _roleService: RoleService) { }\n\n\n  ngOnInit() {\n    this.buildForm()\n    this.listarAreas()\n    this.listarRoles()\n  }\n\n\n  buildForm(){\n    this.formUsuario = this.formBuilder.group({\n      FirstName: ['', Validators.required ],\n      LastName: ['', Validators.required ],\n      Email: ['', Validators.email ],\n      PhoneNumber:  [],\n      UserName: ['', Validators.required ],\n      Password: [null,[Validators.required,Validators.minLength(6)]],\n      RoleId: [''],\n      Level: 1, \n      JoinDate: new Date,\n    });\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.dataSource = new MatTableDataSource(result) \n      })\n  }\n\n  listarRoles() {\n    // Paso 1: Obtener la cadena JSON del localStorage\n    var userString = localStorage.getItem('user');\n\n    // Paso 2: Convertir la cadena JSON a un objeto JavaScript\n    var userObject = JSON.parse(userString);\n\n    // Paso 3: Acceder a la propiedad UserName dentro del objeto\n    var userName = userObject.UserName;\n\n    // Ahora 'userName' contiene el valor de la propiedad UserName\n    console.log(userName);  \n\n    if(userName==\"administrador@mineravallecentral.cl\") {\n      this._roleService.listar()\n      .subscribe(result => {\n        this.listadoRoles = result;\n      });\n    } else {\n      this._roleService.listar()\n      .subscribe(result => {\n        // Filtrar el resultado para excluir el rol con valor 1\n        \n        this.listadoRoles = result.filter(rol => rol.Id !== \"1\");\n      });\n    }\n  }\n\n  get f() { return this.formUsuario.controls; }\n   \n  onSubmit(){\n    \n    this.auxUsuario = this.formUsuario.value\n    this._accountService.guardar(this.auxUsuario)\n    .subscribe( \n      result => {\n        this.IdUsuarioGuardado = this.formUsuario.controls['UserName'].value;\n        localStorage.setItem(\"UserId\",this.formUsuario.controls['UserName'].value);\n        this.cambiarEstado()\n        alert(\"usuario guardado\")\n       },\n      error => { \n        console.log()\n        alert(error.error.Message)\n        return ;\n      })\n  }\n\n\n  asociarUsuarioArea(){\n    \n    let input = new FormData();\n    let areas = this.selection.selected; \n    if(!this.IdUsuarioGuardado){\n        console.log(\"no hay usuario para asignarle los datos\")\n    }\n    input.append('ApplicationUserId', this.IdUsuarioGuardado)\n    input.append(\"areas\", JSON.stringify(areas)) \n\n    this._accountService.asociarUsuarioArea(input)\n    .subscribe(\n      result => {\n        alert(\"usuario y areas guardados\")\n      },\n      error => {\n        alert(JSON.stringify(error))\n      }\n    )\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n\n  cambiarEstado(){\n    this.paso1 = false\n    this.paso2 = true\n    this.listarAreas()\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Agregar usuario</h1>\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"paso1\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formUsuario\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-3\">\n                        <label>Nombres</label>\n                        <input type=\"text\" formControlName=\"FirstName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FirstName.errors }\" />\n                        <div *ngIf=\"submitted && f.FirstName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.FirstName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Apellidos</label>\n                        <input type=\"text\" formControlName=\"LastName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.LastName.errors }\" />\n                        <div *ngIf=\"submitted && f.LastName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.LastName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                \n                    <div class=\"form-group col-3\">\n                        <label>E-mail</label>\n                        <input type=\"text\" formControlName=\"Email\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\" />\n                        <div *ngIf=\"submitted && f.Email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Email.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Telefono</label>\n                        <input type=\"text\" formControlName=\"PhoneNumber\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.PhoneNumber.errors }\" />\n                        <div *ngIf=\"submitted && f.PhoneNumber.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.PhoneNumber.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Nombre Usuario</label>\n                        <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                        <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                        <div *ngIf=\"formUsuario.get('Password').invalid && (formUsuario.get('Password').dirty || formUsuario.get('Password').touched)\"\n                        class=\"alert alert-danger\">\n                    \n                    <div *ngIf=\"formUsuario.get('Password').errors.required\">\n                        Debes ingresar un password\n                    </div>\n                    <div *ngIf=\"formUsuario.get('Password').errors.minlength\">\n                        La contraseña debe poseer al menos 6 caracteres\n                    </div>\n                    </div>\n\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Rol de usuario </label>\n                        <select formControlName=\"RoleId\" class=\"form-control form-control-sm\">\n                            <option *ngFor=\"let data of listadoRoles\" [ngValue]=\"data.Id\" >{{ data.Name }}</option> <!--  -->\n                        </select>\n                    </div> \n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-6\">\n                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n                    </div>\n                </div> \n            </form>\n        </div>\n    </div> \n    <br>\n    <div>\n        <div class=\"row\" >\n            <div class=\"col-10 offset-1\">\n                <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                    <ng-container matColumnDef=\"Seleccionar\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                            </mat-checkbox>\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"Nombre\">\n                        <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                    </ng-container>\n                   \n                    <ng-container matColumnDef=\"Acciones\">\n                        <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> \n                            <button mat-icon-button color=\"primary\" ><!-- (click)=\"editarData(element)\" -->\n                                <mat-icon>edit</mat-icon>\n                            </button>\n                            <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                                <mat-icon>delete</mat-icon>\n                            </button> -->\n                        </mat-cell>\n                    </ng-container>\n        \n                    <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n                </mat-table>\n            </div>\n        \n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n            </div>\n        </div>  \n    </div>\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AccountService } from 'src/app/services/account.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Area } from 'src/app/area/area';\nimport { Role } from 'src/app/role/role';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource, MAT_DATEPICKER_SCROLL_STRATEGY } from '@angular/material';\nimport { AreaService } from 'src/app/services/area.service';\nimport { RoleService } from 'src/app/services/role.service';\n\n@Component({\n  selector: 'app-account-edit',\n  templateUrl: './account-edit.component.html',\n  styleUrls: ['./account-edit.component.css']\n})\nexport class AccountEditComponent implements OnInit {\n\n  public formUsuario: FormGroup\n  public auxUsuario: Account\n  public submitted = false \n  public listadoAreas: Area[]\n  public listadoRoles: Role[]\n  public IdUsuarioGuardado: string\n  public areasUsuario: Area[]\n  tituloColumnas = ['Seleccionar','Nombre']\n  selection = new SelectionModel<Area>(true, []);\n  dataSource: MatTableDataSource<Area> \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _accountService: AccountService,\n    private _activatedRoute: ActivatedRoute,\n    private _areasService: AreaService,\n    private _roleService: RoleService,\n    ) { }\n\n  ngOnInit() {\n    this.buildForm()\n    this.listarAreas()\n    this.listarRoles()\n    this.llenarFormulario()\n    console.log(localStorage)\n  }\n\n  buildForm(){\n    this.formUsuario = this.formBuilder.group({\n      FirstName: ['', Validators.required ],\n      LastName: ['', Validators.required ],\n      Email: ['', Validators.email ],\n      PhoneNumber:  [],\n      UserName: ['', Validators.required ],\n      Password: [null],\n      RoleId: [''],\n      Level: 1, \n      JoinDate: new Date,\n    });\n  }\n\n\n  onSubmit(){\n    let userId = this._activatedRoute.snapshot.params['Id']\n    this._accountService.actualizar(userId, this.formUsuario.value).subscribe(\n      result => {\n          alert(\"Usuario Actualizado\")\n      },\n      error => {\n\n      }\n\n    )\n\n\n  }\n\n  asociarUsuarioArea(){\n    let input = new FormData();\n    let areas = this.selection.selected; \n    let idUsuario = this.formUsuario.controls[\"UserName\"].value\n\n    if(!idUsuario){\n        console.log(\"no hay usuario para asignarle los datos\")\n    }\n\n    input.append('ApplicationUserId', idUsuario)\n    input.append(\"areas\", JSON.stringify(areas)) \n\n    this._accountService.actualizarAsociacionUsuarioArea(idUsuario, input)\n    .subscribe(\n      result => {\n        alert(\"Areas guardados\")\n      },\n      error => {\n        alert(JSON.stringify(error))\n      }\n    )\n\n  }\n\n  get f() { return this.formUsuario.controls; }\n\n  listarRoles(){\n    // Paso 1: Obtener la cadena JSON del localStorage\n    var userString = localStorage.getItem('user');\n\n    // Paso 2: Convertir la cadena JSON a un objeto JavaScript\n    var userObject = JSON.parse(userString);\n\n    // Paso 3: Acceder a la propiedad UserName dentro del objeto\n    var userName = userObject.UserName;\n\n    // Ahora 'userName' contiene el valor de la propiedad UserName\n    console.log(userName);  \n\n    if(userName==\"administrador@mineravallecentral.cl\") {\n      this._roleService.listar()\n      .subscribe(result => {\n        this.listadoRoles = result;\n      });\n    } else {\n      this._roleService.listar()\n      .subscribe(result => {\n        // Filtrar el resultado para excluir el rol con valor 1\n        \n        this.listadoRoles = result.filter(rol => rol.Id !== \"1\");\n      });\n    }\n  }\n\n  llenarFormulario(){\n    let userId = this._activatedRoute.snapshot.paramMap.get(\"Id\")\n    this._accountService.listarPorId(userId)\n    .subscribe(result => {\n      this.formUsuario.patchValue(result);   \n      this.formUsuario.controls['RoleId'].patchValue(result.RoleId) \n    })\n  }\n\n\n  listarAreas(){\n    this._areasService.listar()\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      if(result.length > 0){\n        this.listarAreasUsuario(this._activatedRoute.snapshot.paramMap.get(\"Id\"))\n      }\n    })\n\n  }\n\n  /**\n   * Recorre la tabla de áreas para seleccionar las áreas que tiene asignadas el usuario\n   * @param usuarioId id del usuario\n   */\n  private listarAreasUsuario(usuarioId: any){\n    this._areasService.listarAreasUsuario(usuarioId)\n    .subscribe(result => \n      result.forEach(_data => {\n        this.dataSource.data.forEach(row => { \n          if(JSON.stringify(row) === JSON.stringify(_data)){\n            this.selection.select(row);\n          }\n        })\n      })\n    )\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n       this.selection.clear() :\n       this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Editar usuario</h1>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formUsuario\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-3\">\n                        <label>Nombres</label>\n                        <input type=\"text\" formControlName=\"FirstName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FirstName.errors }\" />\n                        <div *ngIf=\"submitted && f.FirstName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.FirstName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Apellidos</label>\n                        <input type=\"text\" formControlName=\"LastName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.LastName.errors }\" />\n                        <div *ngIf=\"submitted && f.LastName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.LastName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                   \n                    <div class=\"form-group col-3\">\n                        <label>E-mail</label>\n                        <input type=\"text\" formControlName=\"Email\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Email.errors }\" />\n                        <div *ngIf=\"submitted && f.Email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Email.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Telefono</label>\n                        <input type=\"text\" formControlName=\"PhoneNumber\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.PhoneNumber.errors }\" />\n                        <div *ngIf=\"submitted && f.PhoneNumber.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.PhoneNumber.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Nombre Usuario</label>\n                        <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                        <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                        <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Password.errors.required\">Error</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-3\">\n                        <label>Rol de usuario </label>\n                        <select formControlName=\"RoleId\" class=\"form-control form-control-sm\">\n                            <option *ngFor=\"let data of listadoRoles\" [ngValue]=\"data.Id\" >{{ data.Name }}</option> <!--  -->\n                        </select>\n                    </div> \n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-6\">\n                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n                    </div>\n                </div> \n            </form>\n        </div>\n    </div> \n    <br>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-4 offset-3\">\n                <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                    <ng-container matColumnDef=\"Seleccionar\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                            </mat-checkbox>\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"Nombre\">\n                        <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                    </ng-container>\n                 \n                    <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n                </mat-table>\n            </div>\n        \n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n            </div>\n        </div>  \n    </div>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AccountService} from '../../services/account.service'\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { Account } from '../account'\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  tituloColumnas: string[] = ['Id', 'FirstName', 'LastName', 'UserName','Acciones']\n  dataSource: MatTableDataSource<Account>\n  public formData: FormGroup\n  Role: string\n  \n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  \n  constructor(\n          private _accountService: AccountService,\n          private _router: Router,\n          private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.listarDataUsuarios()\n    this.inicializaFormulario()\n\n    this.formData.get('filtro').valueChanges.subscribe((change) => {\n      change == '' ? this.listarDataUsuarios() : this.applyFilter(change)\n    });\n    \n  }\n\n  inicializaFormulario(){\n    this.formData = this.formBuilder.group({\n      filtro: [''],\n      TipoDocumentoId: ['']\n    });\n  }\n  \n\n  listarDataUsuarios(){\n    this.Role = localStorage.getItem('role')\n    this._accountService.listarDataUsuarios()\n      .subscribe(\n        result => {\n          this.dataSource = new MatTableDataSource(result)\n        },\n        error => {\n          console.log(error);\n        })\n  }\n\n  listarData () {\n    return this._accountService.listarDataUsuarios()\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n    })\n    \n  }\n\n\n\n  applyFilter(filterValue: string){\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  editarData(row: any){\n    this._router.navigate([\"app/account/editar/\", row.Id])\n  }\n\n  eliminarData(row: any){\n\n    this._accountService.eliminar(row.Id)\n    .subscribe(result => {\n      alert(result)\n      this.listarDataUsuarios()\n    })\n  }\n\n  agregarUsuario(){\n    this._router.navigate([\"app/account/crear\"])\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <h1>Gestión de usuarios</h1>\n            <div *ngIf=\"Role =='1'\">\n                <button mat-raised-button color=\"primary\" (click)=\"agregarUsuario()\">Agregar Cuenta usuario</button>\n            </div>\n        </div>\n    </div>\n    <br>    \n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <form [formGroup]=\"formData\">\n                <mat-form-field class=\"example-full-width\">\n                    <input matInput formControlName=\"filtro\" placeholder=\"Buscar usuario\" value=\"\">\n                  </mat-form-field>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Id. </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Id}} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"FirstName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Nombres</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.FirstName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"LastName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Apellidos </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.LastName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"UserName\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> NombreUsuario </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.UserName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Email\">\n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> E-mail </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Email }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Acciones\">\n                    \n                    <mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                        <button mat-icon-button color=\"primary\"  (click)=\"editarData(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"accent\" (click)=\"eliminarData(element)\">\n                            <mat-icon >delete</mat-icon>\n                        </button>\n                        \n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n        </div>\n    </div> \n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-create',\n  templateUrl: './role-create.component.html',\n  styleUrls: ['./role-create.component.css']\n})\nexport class RoleCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Crear rol</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-role-edit',\n  templateUrl: './role-edit.component.html',\n  styleUrls: ['./role-edit.component.css']\n})\nexport class RoleEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Editar rol</h1>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DocumentosCreateComponent } from './documentos/documentos-create/documentos-create.component';\nimport { AppComponent } from './app.component';\nimport { AreaComponent } from './area/area.component';\nimport { AreaCreateComponent } from './area/area-create/area-create.component';\nimport { AreaEditComponent } from './area/area-edit/area-edit.component';\nimport { DocumentosComponent } from './documentos/documentos.component';\nimport { AccountCreateComponent } from './account/account-create/account-create.component';\nimport { LoginComponent } from './login/login.component';\nimport { BibliotecaComponent } from './biblioteca/biblioteca.component';\nimport { DocumentoListComponent } from './documentos/documento-list/documento-list.component';\nimport { DocumentoEditComponent } from './documentos/documento-edit/documento-edit.component';\nimport { LoginLayoutComponent } from './layouts/login-layout/login-layout.component';\nimport { PageLayoutComponent } from './layouts/page-layout/page-layout.component';\nimport { AccountComponent } from './account/account/account.component';\nimport { AccountEditComponent } from './account/account-edit/account-edit.component';\nimport { InicioComponent } from './inicio/inicio/inicio.component';\nimport { AuthguardService } from './shared/authguard.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginLayoutComponent,  pathMatch: 'prefix',\n    children: [\n      { path: '', component: LoginComponent },\n    ]\n  },\n { \n    path:'app',\n    component: PageLayoutComponent,\n    children: [\n      // inicio\n      { path:'inicio', component: InicioComponent },\n      //\n      { path:'documento', component: DocumentosComponent },\n      { path:'documento/crear', component: DocumentosCreateComponent,canActivate: [AuthguardService]  },\n      { path:'documento/editar/:Id', component: DocumentoEditComponent, canActivate: [AuthguardService]  },\n      //areas\n      { path:'area', component: AreaComponent, canActivate: [AuthguardService]  },\n      { path:'area/crear', component: AreaCreateComponent, canActivate: [AuthguardService] },\n      { path:'area/editar/:Id', component: AreaEditComponent, canActivate: [AuthguardService]  },\n      //account\n      { path:'account', component: AccountComponent, canActivate: [AuthguardService] },\n      { path:'account/crear', component: AccountCreateComponent},\n      { path:'account/editar/:Id', component: AccountEditComponent },\n      //biblioteca\n      { path: 'biblioteca', component: BibliotecaComponent },\n      { path: 'biblioteca/:Id', component: BibliotecaComponent },\n      { path: 'biblioteca/de/:Id', component: BibliotecaComponent },\n      { path: 'biblioteca/de/:Id/:IdArea', component: BibliotecaComponent },\n      { path: 'biblioteca/do/:Id', component: BibliotecaComponent },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Area } from './area/area';\nimport { Account } from './account/account';\nimport { Router } from '@angular/router';\nimport { AccountService } from './services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  title = 'Angular';\n  areas: Area[]\n  currentUser: Account; \n  documentosEstructurales: any[]\n  otrosDestinos: any[]\n  enabled = true;\n\n  destinos = [\n      { \"Id\": 2, \"Nombre\": \"Auditorías\" },\n      { \"Id\": 3, \"Nombre\": \"No Conformidades\" },\n      { \"Id\": 4, \"Nombre\": \"Gestión Emergencias\" },\n      { \"Id\": 5, \"Nombre\": \"Documentos Transversales\" },\n      { \"Id\": 6, \"Nombre\": \"Manual Sistema Gestión Integrado (SGI)\" },\n      { \"Id\": 7, \"Nombre\": \"Política Corporativa MVC\" },\n      { \"Id\": 8, \"Nombre\": \"Notas Internas\" },\n      { \"Id\": 9, \"Nombre\": \"Formatos en blanco\" },\n      { \"Id\": 10, \"Nombre\": \"Documentos EE.CC.\" }\n  ]\n\n\n  constructor(\n    private _router: Router,\n    private _accountService: AccountService\n  ){\n    //this._accountService.currentUser.subscribe( x => this.currentUser = x);\n    \n  }\n\n  ngOnInit(){\n\n    if(this.currentUser){\n      this.areas = this.currentUser.Areas;\n      localStorage.setItem(\"UserRole\", this.currentUser.Role) \n    }\n\n    this.separarMenus()\n  }\n\n  cerrarSesion() {\n    this._accountService.logOut();\n    this._router.navigate(['/'])\n    localStorage.clear();\n  }\n\n  separarMenus(){\n    this.documentosEstructurales = this.destinos.filter(x => x.Id <= 8)\n    this.otrosDestinos = this.destinos.filter(x => x.Id > 8)\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { DocumentosCreateComponent } from './documentos/documentos-create/documentos-create.component';\nimport { DocumentosComponent} from '../app/documentos/documentos.component'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AccountCreateComponent } from './account/account-create/account-create.component';\nimport { AreaComponent } from './area/area.component';\nimport { AreaCreateComponent } from './area/area-create/area-create.component';\nimport { AreaEditComponent } from './area/area-edit/area-edit.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { \n  MatIconModule, \n  MatSidenavModule,\n  MatListModule,\n  MatSnackBarModule, \n  MatDatepickerModule, \n  MatNativeDateModule, \n  MatInputModule, \n  MatFormFieldModule,\n  MatSelectModule,\n  MAT_DATE_LOCALE, \n  MatSlideToggleModule,\n  MatCardModule\n} from '@angular/material';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n//import { MatTableExporterModule } from 'mat-table-exporter';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { BibliotecaComponent } from './biblioteca/biblioteca.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { RoleCreateComponent } from './account/role-create/role-create.component';\nimport { RoleEditComponent } from './account/role-edit/role-edit.component';\nimport { DocumentoListComponent } from './documentos/documento-list/documento-list.component';\nimport { DocumentoEditComponent } from './documentos/documento-edit/documento-edit.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PageLayoutComponent } from './layouts/page-layout/page-layout.component';\nimport { LoginLayoutComponent } from './layouts/login-layout/login-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotifierModule } from \"angular-notifier\";\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { LoaderService } from './services/loader.service';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoaderInterceptor } from './interceptors/loader.interceptor';\nimport { AccountComponent } from './account/account/account.component';\nimport { AccountEditComponent } from './account/account-edit/account-edit.component';\nimport { JoyrideModule } from 'ngx-joyride'\nimport { from } from 'rxjs';\nimport { InicioComponent } from './inicio/inicio/inicio.component';\nimport { ListadoAreasComponent } from './components/listado-areas/listado-areas/listado-areas.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DocumentosCreateComponent,\n    DocumentosComponent,\n    AccountCreateComponent,\n    AreaComponent,\n    AreaCreateComponent,\n    AreaEditComponent,\n    BibliotecaComponent,\n    RoleCreateComponent,\n    RoleEditComponent,\n    DocumentoListComponent,\n    DocumentoEditComponent,\n    PageLayoutComponent,\n    LoginLayoutComponent,\n    LoginComponent,\n    AccountComponent,\n    AccountEditComponent,\n    InicioComponent,\n    ListadoAreasComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    //MatTableExporterModule por implementar,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatDatepickerModule,        // <----- import(must)\n    MatNativeDateModule,        // <----- import for date formating(optional)\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    LayoutModule,\n    NotifierModule.withConfig({\n      // Custom options in here\n      }),\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    NgxSkeletonLoaderModule,\n    JoyrideModule.forRoot(),\n  ],\n  exports: [\n    MatSidenavModule,\n    MatListModule\n  ],\n  providers: [\n    CookieService,\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-create',\n  templateUrl: './area-create.component.html',\n  styleUrls: ['./area-create.component.css']\n})\nexport class AreaCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Agregar área</h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-edit',\n  templateUrl: './area-edit.component.html',\n  styleUrls: ['./area-edit.component.css']\n})\nexport class AreaEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>Editar área</h1>","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AreaService } from '../services/area.service';\nimport { Area } from './area';\n\n\n@Component({\n  selector: 'app-area',\n  templateUrl: './area.component.html',\n  styleUrls: ['./area.component.css']\n})\nexport class AreaComponent implements OnInit {\n\n  listadoAreas: Area[]\n  tituloColumnas : string[]\n\n  constructor(private _areaService: AreaService) { }\n\n  ngOnInit() {\n    \n    this.listarAreas()\n    this.tituloTabla();\n  }\n\n  listarAreas(){\n    this._areaService.listar()\n    .subscribe(result => {\n      console.log(result)\n      this.listadoAreas = result\n    })\n  }\n\n  tituloTabla(){\n    this.tituloColumnas = [\"Id\",\"Nombre\",\"Descripcion\",\"Acciones\"]\n  }\n\n  editarData(element: any){\n    console.log(element)\n    return false;\n  }\n\n  eliminarData(element: any){\n    confirm(\"Confirmar eliminación de: \" + element.Nombre);\n    return false;\n  }\n\n}\n","<h1>Listado areas</h1>\n<div class=\"row\">\n    <div class=\"col-10 offset-1\">\n        <mat-table [dataSource]=\"listadoAreas\" class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"Id\">\n                <mat-header-cell *matHeaderCellDef> Id. </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"Nombre\">\n                <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"Descripcion\">\n                <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Acciones\">\n                <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> \n                    <button mat-icon-button color=\"primary\" (click)=\"editarData(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                    <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                        <mat-icon>delete</mat-icon>\n                    </button> -->\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n        </mat-table>\n    </div>\n</div>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Documento } from '../documentos/documento';\nimport { DocumentoService } from '../services/documento.service';\nimport { filter, map, mergeAll, mergeMap, pluck, tap } from 'rxjs/operators';\nimport { AreaService } from '../services/area.service';\nimport { Area } from '../area/area';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport { MatSnackBar} from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatInputModule, MatTableDataSource, MatPaginator, MatSort, MatTable } from '@angular/material';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { DestinoDocumentoService } from '../services/destino-documento.service';\n\n\n@Component({\n  selector: 'app-biblioteca',\n  templateUrl: './biblioteca.component.html',\n  styleUrls: ['./biblioteca.component.css']\n})\nexport class BibliotecaComponent implements OnInit {\n\n  public listadoDocumentos: Documento[]\n  public listadoAreas: Area[] \n  tituloColumnas: string[] = ['Codigo','Nombre', 'Descripción', 'Versión','Descargar']\n  public formData: FormGroup\n  usuario: any\n  title: string\n  Role: string\n  dataSource: MatTableDataSource<Documento>;\n  TipoDocumento = [\n    {\"Id\": 21 , \"Nombre\": \"Documentos\", \"Descripcion\": \"\"},\n    {\"Id\": 22 , \"Nombre\": \"Registros\", \"Descripcion\": \"\"}\n  ]\n\n \n  constructor(\n    private _documentoService: DocumentoService,\n    private _areaService: AreaService,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private _snackBar: MatSnackBar, \n    private _sanitizer: DomSanitizer,\n    private _matInput: MatInputModule,\n    private formBuilder: FormBuilder,\n    private _destinoDocumentoService: DestinoDocumentoService\n  ) { \n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  \n  ngOnInit() {\n    this.verificarUsuario()\n    this.inicializaFormulario()\n    \n\n    this.formData.get('filtro').valueChanges.subscribe((change) => {\n      change == '' ? this.verificarUsuario() : this.applyFilter(change)\n    });\n    //this.dataSource.paginator = this.paginator\n    \n    this.setTituloPagina()\n  }\n\n  \n  verificarUsuario(){\n    this.usuario = JSON.parse(localStorage.getItem(\"user\"));\n    this.Role = localStorage.getItem('role')\n    this.listarDocumentos();\n    return; \n  }\n\n\n  inicializaFormulario(){\n    this.formData = this.formBuilder.group({\n      filtro: [''],\n      TipoDocumentoId: ['']\n    });\n  }\n\n  \n  /**\n   * Lista todos los documentos en el sistema\n   */\n  listarDocumentos(){\n    //Separación y filtrado \n    // si como parámetro viene las áreas del usuario se filtra si aplican \n    const urlParams = this._router.url; \n    if(urlParams.includes(\"de\")){\n      if(this._activatedRoute.snapshot.params.IdArea){\n        this.listarDocumentosPorArea(this._activatedRoute.snapshot.params.IdArea)\n        return;\n      }else{\n        this.listarDocumentoPorDestino(this._activatedRoute.snapshot.params.Id)\n        return;\n      }\n    }\n\n    if(urlParams.includes(\"do\")){\n      this.listarDocumentoPorArea(this._activatedRoute.snapshot.params.Id)\n      return;\n    }\n\n    this._documentoService.listar()\n      .subscribe(result => {\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        this.dataSource = new MatTableDataSource(result)\n        this.dataSource.paginator = this.paginator\n      })\n  }\n\n  setTituloPagina(){\n    let sectionId = this._activatedRoute.snapshot.params.Id\n    if (typeof sectionId === 'undefined'){\n      this.title = 'Biblioteca Documental'\n      return\n    }\n\n    let id = this._activatedRoute.snapshot.paramMap.get('Id')\n    let idArea = this._activatedRoute.snapshot.paramMap.get('IdArea')\n\n    if(idArea == null){\n      this._destinoDocumentoService.listarPorId(this._activatedRoute.snapshot.params.Id).subscribe(\n        result => {\n            this.title = result.Nombre\n        },\n        error => {\n          console.error(error)\n        }\n      )\n    }\n    else{\n      this._areaService.listarPorId(+idArea).subscribe(\n        result => {\n          this.title = \"Documentos \" + result.Nombre\n        },\n        error => {\n\n        }\n      )\n    }\n  }\n\n\n  listarDocumentoPorDestino(idDestino){\n    this._documentoService.listar()\n    .pipe(\n      map(result => {\n        //Ordenados por fecha de mayor a menor (documentos más viejos al último)\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.DestinoDocumentoId == idDestino)\n      })\n    )\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      this.dataSource.paginator = this.paginator\n    })\n  }\n\n\n  listarDocumentosPorArea(idArea){\n    this._documentoService.listar()\n    .pipe(\n      map(result => {\n        //Ordenados por fecha de mayor a menor (documentos más viejos al último)\n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.Areas.some(ar => ar.Id == idArea))\n      })\n    )\n    .subscribe(result => {\n      this.dataSource = new MatTableDataSource(result)\n      this.dataSource.paginator = this.paginator\n    })\n\n  }\n\n\n  /**\n   * Descargar el documento seleccionado\n   * @param e \n   */\n  descargar(e){\n    this._documentoService.descargarDocumento(e.Id)\n      .subscribe(data =>{\n        let extension = this.listarExtensionPorMime(data.type)\n        let type = data.type;\n        var blob = new Blob([data], { type: type  })\n        saveAs(blob, e.Codigo + extension);\n      })\n  }\n  \n  \n  /** Remover esto es solo para las pruebas */\n  listarAreas(){\n    this._areaService.listar()\n    .subscribe(result => {\n      this.listadoAreas = result \n    } )\n  }\n\n\n  /**\n   * Lista los documentos que se asocian a un área cuando se suben \n   * @param areas Array del objeto tipo área\n   */\n  listarDocumentoPorAreas(areas: Area[]){\n    this._documentoService.listarPorArea(areas)\n    .subscribe(result => {\n      this.listadoDocumentos = result \n    })\n  }\n\n\n  /**\n   * Lista los documentos asociados a UN AREA la cual se define por el Id\n   * @param areaId Id del área\n   */\n  listarDocumentoPorArea(areaId: number){\n    let usuario = JSON.parse(localStorage.getItem(\"user\"));\n    let areas = usuario.Areas\n    this._documentoService.listarPorArea(areas)\n    .pipe(\n      map(result => { \n        result = result.sort((a,b) => new Date(b.FechaIngreso).getTime() - new Date(a.FechaIngreso).getTime())\n        return result.filter(doc => doc.Areas.some( ar => ar.Id == areaId)) \n      })\n    )\n    .subscribe(result => {\n      this.listadoDocumentos = result \n    })\n  }\n\n\n  /**\n   * Aplica filtro básandose en el texto ingresado en el input de arriba de la tabla\n   * @param filterValue \n   */\n  applyFilter(filterValue: string){\n\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    this.dataSource.paginator = this.paginator\n  }\n\n\n  editar(elemento: any){\n    this._router.navigate([\"app/documento/editar/\", elemento.Id])\n  }\n\n  eliminar(elemento: any){\n    this._documentoService.eliminar(elemento).subscribe(result => {\n      alert(result);\n      this.verificarUsuario()\n    })\n  }\n\n\n  /***\n   * Redirige a la página para agregar un nuevo documento \n   */\n  agregarDocumento(){\n    //this._router.navigate(['documento/crear'])\n    this._router.navigateByUrl(\"app/documento/crear\").then( e =>{})\n  }\n\n  filtrarPorTipoDocumento(listadoTipoDocumentos: Documento[], tipoDocumentoId: number){\n    this._documentoService.listar().pipe(\n      map(data => data.filter(doc => doc.TipoDocumentoId == tipoDocumentoId ))\n    ).subscribe(result =>{ \n        this.listadoDocumentos = result\n    })\n  }\n\n  listarExtensionPorMime(mime: string){\n    const listadoMime = [\n      {\"extension\": \".pdf\" , \"mime\": \"application/pdf\" },\n      {\"extension\": \".xls\" , \"mime\": \"application/vnd.ms-excel\" },\n      {\"extension\": \".xlsx\", \"mime\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" },\n      {\"extension\": \".ppt\" , \"mime\": \"application/vnd.ms-powerpoint\" },\n      {\"extension\": \".pptx\", \"mime\": \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" },\n      {\"extension\": \".doc\" , \"mime\": \"application/msword\" },\n      {\"extension\": \".docx\", \"mime\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" },\n      {\"extension\": \".txt\", \"mime\": \"text/plain\" }\n    ]\n\n    return listadoMime.filter(x => x.mime == mime)[0].extension;\n  }\n\n\n  filtrarDocumentos(){\n    const areaId = this._activatedRoute.snapshot.params[\"Id\"]\n    const tipoDocumentoId = this.formData.get('TipoDocumentoId').value\n\n    const datos = this._documentoService.listar()\n\n    if(areaId && tipoDocumentoId){\n      datos.pipe(\n        map(data => data.filter(doc => doc.AreaId == areaId && doc.TipoDocumentoId == tipoDocumentoId))\n      )\n      .subscribe(result => {\n        this.listadoDocumentos = result;  \n      });\n    }\n\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12 \">\n            <br>\n            <h1>{{ title }}</h1>\n            <div *ngIf=\"Role =='1'\">\n                <button mat-raised-button color=\"primary\" (click)=\"agregarDocumento()\">Agregar Documento</button>\n            </div>\n        </div>\n    </div>\n    <br>    \n    <div class=\"row\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formData\">\n                <mat-form-field class=\"example-full-width\">\n                    <input matInput formControlName=\"filtro\" placeholder=\"Buscar documento\" value=\"\">\n                  </mat-form-field>\n            </form>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <table mat-table [dataSource]=\"dataSource\" style=\"min-width: 100%;\" >\n                <ng-container matColumnDef=\"Id\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Id </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Id }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Codigo\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Código Documento </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Codigo }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Nombre Documento </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripción\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Descripción </th>\n                    <td mat-cell *matCellDef=\"let element\" [innerHTML]=\"element.Descripcion\"></td>\n                </ng-container>\n                <ng-container matColumnDef=\"Versión\">\n                    <th mat-header-cell *matHeaderCellDef  class=\"text-center\"> Versión </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"text-center\"> {{element.Version }} </td>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Descargar\">\n                    <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Descargar </th>\n                    <td mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                        <button mat-icon-button color=\"primary\" (click)=\"descargar(element)\">\n                            <mat-icon>cloud_download</mat-icon>\n                        </button>\n                        <button *ngIf=\"Role == '1'\" mat-icon-button color=\"primary\" (click)=\"editar(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button *ngIf=\"Role == '1'\" mat-icon-button color=\"accent\" (click)=\"eliminar(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </td>\n                </ng-container>\n    \n                <tr mat-header-row *matHeaderRowDef=\"tituloColumnas\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></tr>\n            </table> \n            <mat-paginator [pageSizeOptions]=\"[ 10, 50, 100]\" showFirstLastButtons></mat-paginator>\n            <!-- <div style=\"background: #fff; padding: 5px;\">\n                <ngx-skeleton-loader\n                    count=\"10\"\n                    [theme]=\"{ \n                    'border-radius': '1px',\n                    height: '25px',\n                    'background-color': '#eee',\n                    'border-bottom': '1px solid #8a8a8a'\n                    }\"\n                ></ngx-skeleton-loader>\n            </div> -->\n        </div>\n    </div>\n    <br>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\n\n@Component({\n  selector: 'app-listado-areas',\n  templateUrl: './listado-areas.component.html',\n  styleUrls: ['./listado-areas.component.css']\n})\nexport class ListadoAreasComponent implements OnInit {\n  areas: Area[];\n\n\n  constructor(private _destinoDocumentoService: DestinoDocumentoService) { }\n\n  ngOnInit() {\n    this.areas = JSON.parse(localStorage.getItem('areas'));\n    this.areas.filter(ar => ar.Estado != false);\n  }\n}\n","\n<div class=\"dropdown\">\n    <button class=\"btn btn-warning dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      Mis accesos directos\n    </button>\n    \n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n    <ul style=\"list-style-type: none;\" class=\"accesos-directos\">\n        <li *ngFor=\"let area of areas\">\n            <a [routerLink]=\"['biblioteca/de/1/', area.Id]\">{{ area.Nombre }}</a>\n        </li>\n    </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Documento } from '../documento'\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AreaService } from 'src/app/services/area.service';\nimport { Area } from 'src/app/area/area';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { matFormFieldAnimations, MatTableDataSource } from '@angular/material';\nimport * as moment from 'moment';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { TipoDocumentoService } from 'src/app/services/tipo-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { TipoDocumento } from 'src/app/tipo-documento/tipo-documento';\n\n\n@Component({\n  selector: 'app-documento-edit',\n  templateUrl: './documento-edit.component.html',\n  styleUrls: ['./documento-edit.component.css']\n})\nexport class DocumentoEditComponent implements OnInit {\n\n  public formDocumento: FormGroup\n  public submitted = false\n  public listadoAreas: Area[]\n  editDocumento = new Documento\n  public documentoGuardado: Documento\n  dataSource: MatTableDataSource<Area> \n  \n  fileToUpload: File\n  selection = new SelectionModel<Area>(true, []);\n\n  listadoTipoDocumento: TipoDocumento[]\n  listadoDestinoDocumento: DestinoDocumento[]\n\n  tituloColumnas = ['Seleccionar','Nombre','Descripcion']\n  nombre = 'DocumentosCreate'\n  documentoId: any\n  \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _tipoDocumentoService: TipoDocumentoService\n  ) { }\n\n  ngOnInit() {\n    this.documentoId = this._activatedRoute.snapshot.paramMap.get(\"Id\")\n    this.buildForm()\n   \n    this.listarAreas()\n    this.listarDestinoDocumento()\n    this.listarTipoDocumento()\n\n    this.listarDocumentoPorId(this.documentoId);\n  }\n\n  private buildForm(){\n    this.formDocumento = this.formBuilder.group({\n      Codigo: ['', Validators.required],\n      Nombre: ['',Validators.required],\n      Descripcion: [''],\n      EsTransversal : false,\n      Version: [''],\n      TipoDocumentoId: ['',Validators.required],\n      FechaEmision: [],\n      FechaIngreso: [],\n      Archivo: [],\n      DestinoDocumentoId: []\n    })\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.dataSource = new MatTableDataSource(result)\n        this.listarAreasDocumento()\n      })\n  }\n\n\n  listarDocumentoPorId(documentoId: any){\n    \n    this._documentoService.listarPorId(documentoId)\n    .subscribe(result => {\n      this.formDocumento.patchValue(result);\n    })\n  }\n\n\n  listarAreasDocumento(){\n    if(this.documentoId){\n      this._documentoService.listarAreasDocumento(this.documentoId)\n        .subscribe(result => {\n          result.forEach(area => {\n              this.dataSource.data.forEach(row => { \n                if(JSON.stringify(row) === JSON.stringify(area)){\n                  this.selection.select(row)\n                }\n              })\n            })\n        })\n    }\n  }\n\n\n  listarDestinoDocumento(){\n    this._destinoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoDestinoDocumento = result;\n        },\n        error => {\n          console.error(error);\n        }\n      )\n  }\n\n\n  listarTipoDocumento(){\n    this._tipoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoTipoDocumento = result\n        },\n        error => {\n          console.error(error)\n        }\n      )\n\n  }\n\n  get f() { return this.formDocumento.controls; }\n\n\n  onFileSelect(event) {\n    if(event.target.files.length > 0){\n      let file = event.target.files[0]\n      this.fileToUpload = event.target.files[0]\n    }\n  }\n\n\n  onSubmit(){\n    const mensaje = '¿Estás seguro de que deseas actualizar el documento?';\n\n    if (this._documentoService.confirmar(mensaje)) {\n\n      const formData = new FormData(); \n      if(this.fileToUpload){\n        formData.append('Archivo', this.fileToUpload , this.fileToUpload.name )\n      }\n      formData.append('Id', this.documentoId)\n      formData.append('Codigo', this.formDocumento.get('Codigo').value)\n      formData.append('Nombre', this.formDocumento.get('Nombre').value)\n      formData.append('Descripcion', this.formDocumento.get('Descripcion').value)\n      formData.append('Version', this.formDocumento.get('Version').value)\n      formData.append('TipoDocumentoId', this.formDocumento.get('TipoDocumentoId').value)\n      formData.append('FechaEmision', this.formDocumento.get('FechaEmision').value)\n      formData.append('FechaIngreso', this.formDocumento.get('FechaIngreso').value)\n      formData.append('DestinoDocumentoId', this.formDocumento.get('DestinoDocumentoId').value)\n\n      this._documentoService.editar(formData)\n      .subscribe(result => {  })\n    }\n\n  }\n\n  cambiarEstado(){\n    this.listarAreas()\n  }\n\n\n  asociarDocumentoArea(){\n    let input = new FormData();\n\n    let areas = this.selection.selected;\n    input.append('documentoId', this._activatedRoute.snapshot.paramMap.get(\"Id\"))\n    input.append(\"areas\", JSON.stringify(areas)) \n    \n    this._documentoService.actualizarDocumentoArea(input)\n    .subscribe( \n        result => {\n          alert(JSON.stringify(result))\n          this.resetearFormulario()\n        },\n        error => {\n          alert(JSON.stringify(error))\n        }\n    )\n  }\n\n  resetearFormulario(){\n    this.formDocumento.reset();\n    this.selection = null\n  }\n\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1>Editar documentos</h1>\n    </div>\n    <br>\n    <div class=\"row\" >\n        <form [formGroup]=\"formDocumento\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-3\">\n                <label>Código</label>\n                <input type=\"text\" formControlName=\"Codigo\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Codigo.errors }\" />\n                <div *ngIf=\"submitted && f.Codigo.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Codigo.errors.required\">Error</div>\n                </div>\n            </div>\n            \n            <div class=\"form-group col-4\">\n                <label>Nombre documento</label>\n                <input type=\"text\" formControlName=\"Nombre\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Nombre.errors }\" />\n                <div *ngIf=\"submitted && f.Nombre.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Nombre.errors.required\">Error</div>\n                </div>\n            </div>\n            <div class=\"form-group col-5\">\n                    <label>Descripción</label>\n                    <input type=\"text\" formControlName=\"Descripcion\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Descripcion.errors }\" />\n                    <div *ngIf=\"submitted && f.Descripcion.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Descripcion.errors.required\">Error</div>\n                    </div>\n                </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Tipo Documento</label>\n                <select formControlName=\"TipoDocumentoId\" class=\"form-control form-control-sm\">\n                    <option *ngFor=\"let data of listadoTipoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                </select>\n            </div>\n            \n            <div class=\"form-group col-3\">\n                <label>Versión</label>\n                <input type=\"text\" formControlName=\"Version\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Version.errors }\" />\n                <div *ngIf=\"submitted && f.Version.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.Version.errors.required\">Error</div>\n                </div>\n            </div> \n\n            <div class=\"form-group col-3\">\n                <label>Destino </label>\n                <select formControlName=\"DestinoDocumentoId\" class=\"form-control form-control-sm\">\n                    <option *ngFor=\"let data of listadoDestinoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                </select>\n            </div> \n        </div>\n        \n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Fecha Emision</label>\n                <!-- <input type=\"text\" formControlName=\"FechaEmision\" placeholder=\"dd-mm-aaaa\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FechaEmision.errors }\" />\n                <div *ngIf=\"submitted && f.FechaEmision.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.FechaEmision.errors.required\">Error</div>\n                </div>-->\n\n                <input type=\"text\" formControlName=\"FechaEmision\"  [matDatepicker]=\"FechaEmision\" placeholder=\"Fecha emisión\">\n                <mat-datepicker-toggle matSuffix [for]=\"FechaEmision\"></mat-datepicker-toggle>\n                <mat-datepicker #FechaEmision></mat-datepicker>\n            </div>\n        \n            <div class=\"form-group col-4\">\n                <label>Fecha Ingreso</label>\n                <!--\n                <input type=\"text\" formControlName=\"FechaIngreso\" placeholder=\"dd-mm-aaaa\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.FechaIngreso.errors }\" />\n                <div *ngIf=\"submitted && f.FechaIngreso.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.FechaIngreso.errors.required\">Error</div>\n                </div>-->\n                <input type=\"text\" formControlName=\"FechaIngreso\" [matDatepicker]=\"FechaIngreso\"  placeholder=\"Fecha ingreso\">\n                <mat-datepicker-toggle matSuffix [for]=\"FechaIngreso\"></mat-datepicker-toggle>\n                <mat-datepicker #FechaIngreso></mat-datepicker>\n            </div>\n        </div>\n\n        <div class=\"form-row\">\n            <div class=\"form-group col-4\">\n                <label>Subir archivo </label>\n                <input type=\"file\"\n                        formControlName=\"Archivo\"\n                        accept=\"document/*\" \n                        (change)=\"onFileSelect($event)\"\n                        class=\"form-control form-control-sm\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.nombres.errors }\" />\n            </div>\n        </div>\n\n        <div class=\"form-group col-6\">\n            <button type=\"submit\" class=\"btn btn-success\">Actualizar</button>\n        </div>\n        </form>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Seleccionar\">\n                    <mat-header-cell *matHeaderCellDef>\n                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" >\n                        </mat-checkbox> \n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\">\n                        </mat-checkbox>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Acciones\">\n                    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> \n                        <button mat-icon-button color=\"primary\" >(click)=\"editarData(element)\" \n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                        </button> \n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n            <div class=\"form-group col-6\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarDocumentoArea()\">Guardar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Documento } from '../documento';\n\n@Component({\n  selector: 'app-documento-list',\n  templateUrl: './documento-list.component.html',\n  styleUrls: ['./documento-list.component.css']\n})\nexport class DocumentoListComponent implements OnInit {\n\n  listadoDocumentos:  Documento[]\n  tituloColumnas: ['Id', 'Codigo', 'Descripcion']\n  \n  constructor(private _documentoService: DocumentoService) { }\n\n  ngOnInit() {\n    this.listarDocumentos()\n  }\n\n  listarDocumentos(){\n    this._documentoService.listar()\n    .subscribe(data => { \n      this.listadoDocumentos = data \n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1>Listado Documentos</h1>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <input matInput placeholder=\"Filter\">\n\n            <mat-table [dataSource]=\"listadoDocumentos\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Codigo }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n        </div>\n    </div>\n    <!-- <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"asociarUsuarioArea()\">Guardar</button>\n        </div>\n    </div> -->\n</div>","import { Area } from '../area/area'\nimport { DocumentoAreas } from './documento-areas'\n\nexport class Documento {\n    Id: number\n    Codigo: string\n    Nombre: string \n    Descripcion: string\n    Direccion: string\n    Version: string\n    Archivo: File\n    AreaId: number\n    DestinoDocumentoId: number\n    TipoDocumentoId?: number\n    FechaEmision: Date\n    FechaIngreso: Date\n    Areas: Area[]\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Documento } from '../documento'\nimport { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AreaService } from 'src/app/services/area.service';\nimport { Area } from 'src/app/area/area';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DocumentoService } from 'src/app/services/documento.service';\nimport { Router } from '@angular/router';\nimport { matFormFieldAnimations, MatSnackBar } from '@angular/material';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { TipoDocumento } from 'src/app/tipo-documento/tipo-documento';\nimport { TipoDocumentoService } from 'src/app/services/tipo-documento.service';\n\n@Component({\n  selector: 'app-documentos-create',\n  templateUrl: './documentos-create.component.html',\n  styleUrls: ['./documentos-create.component.css']\n})\n\n\nexport class DocumentosCreateComponent implements OnInit {\n \n  public formDocumento: FormGroup\n  public submitted = false\n  public listadoAreas: Area[]\n  insertDocumento = new Documento\n  public paso1 = true; \n  public paso2 = false;\n  //public documentoGuardado: Documento\n  documentoGuardadoId: any\n  \n  fileToUpload: File = null\n  selection = new SelectionModel<Area>(true, []);\n\n  listadoTipoDocumento: TipoDocumento[];\n  listadoDestinoDocumento : DestinoDocumento[];\n  tituloColumnas = ['Seleccionar','Nombre','Descripcion']\n  nombre = 'DocumentosCreate'\n  \n  \n  constructor( \n    private formBuilder: FormBuilder,\n    private _areaService: AreaService,\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _matSnack: MatSnackBar,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _tipoDocumentoService: TipoDocumentoService\n    ) { \n  }\n  \n\n  ngOnInit() {\n   this.buildForm()\n   this.listarAreas()\n   this.listarDestinoDocumento()\n   this.listarTipoDocumento()\n  }\n\n\n  private buildForm(){\n    this.formDocumento = this.formBuilder.group({\n      Codigo: ['', Validators.required],\n      Nombre: ['',Validators.required],\n      Descripcion: [''],\n      EsTransversal : false,\n      Version: [''],\n      TipoDocumentoId: ['',Validators.required],\n      FechaEmision: new Date,\n      FechaIngreso: new Date,\n      Archivo: [],\n      DestinoDocumentoId: []\n    })\n  }\n\n\n  listarAreas(){\n    this._areaService.listar()\n      .subscribe( result => { \n        this.listadoAreas = result\n      })\n  }\n\n  listarDestinoDocumento(){\n    this._destinoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoDestinoDocumento = result;\n        },\n        error => {\n          console.error(error);\n        }\n      )\n  }\n\n\n  listarTipoDocumento(){\n    this._tipoDocumentoService.listar()\n      .subscribe(\n        result => {\n          this.listadoTipoDocumento = result\n        },\n        error => {\n          console.error(error)\n        }\n      )\n\n  }\n\n\n  get f() { return this.formDocumento.controls; }\n\n\n  onFileSelect(event) {\n    if(event.target.files.length > 0){\n      let file = event.target.files[0]\n      this.fileToUpload = event.target.files[0]\n    }\n  }\n\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.listadoAreas.forEach(row => this.selection.select(row));\n  }\n\n\n  isAllSelected() {\n    if(this.selection.selected != []){\n      const numSelected = this.selection.selected.length;\n      const numRows = this.listadoAreas.length;\n      return numSelected === numRows;\n    }\n  }\n\n\n  onSubmit(){\n    const mensaje = '¿Estás seguro de que deseas crear el documento?';\n\n    if (this._documentoService.confirmar(mensaje)) {\n\n      const formData = new FormData(); \n      formData.append('Archivo',  this.fileToUpload, this.fileToUpload.name)\n      formData.append('Codigo', this.formDocumento.get('Codigo').value)\n      formData.append('Nombre', this.formDocumento.get('Nombre').value)\n      formData.append('Descripcion', this.formDocumento.get('Descripcion').value)\n      formData.append('Version', this.formDocumento.get('Version').value)\n      formData.append('TipoDocumentoId', this.formDocumento.get('TipoDocumentoId').value)\n      formData.append('FechaEmision', this.formDocumento.get('FechaEmision').value)\n      formData.append('FechaIngreso', this.formDocumento.get('FechaIngreso').value)\n      formData.append('DestinoDocumentoId', this.formDocumento.get('DestinoDocumentoId').value)\n      \n          \n      this._documentoService.guardar(formData)\n      .subscribe(result => { \n        this._matSnack.open(\"Agregado con Id\" + result, \"\",{\n          duration: 5000\n        } )\n        this.documentoGuardadoId = result \n        this.cambiarVistas();\n      },\n      error =>{\n        console.log(error);\n      })\n    }\n  }\n  \n\n  cambiarEstado(){\n    this.cambiarVistas()\n    this.listarAreas()\n  }\n\n\n  asociarDocumentoArea(){\n    let input = new FormData();\n    let areas = this.selection.selected;\n    if(!this.documentoGuardadoId || this.documentoGuardadoId == 0){\n      alert(\"Error no se ha registrado el Id, favor verificar si se ingreso el documento \\n si no realice la operación nuevamente\")\n      return\n    }\n\n    input.append('documentoId', this.documentoGuardadoId.toString())\n    input.append(\"areas\", JSON.stringify(areas)) \n    \n    this._documentoService.asociarDocumentoArea(input)\n    .subscribe( \n        result => {\n          alert(JSON.stringify(result))\n          this.resetearFormulario()\n        },\n        error => {\n          alert(JSON.stringify(error))\n        }\n    )\n  }\n\n\n  resetearFormulario(){\n    this.cambiarVistas()\n    this.formDocumento.reset();\n    this.selection = null\n  }\n\n\n  cambiarVistas(){\n    this.paso1 = !this.paso1\n    this.paso2 = !this.paso2\n  }\n\n  volverUsuario(){\n    this._router.navigate([\"app/account\"])\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-10 offset-1\">\n            <h1>Agregar documentos</h1>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\" [hidden]=\"!paso1\">\n        <div class=\"col-12\">\n            <form [formGroup]=\"formDocumento\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>Código</label>\n                    <input type=\"text\" formControlName=\"Codigo\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Codigo.errors }\" />\n                    <div *ngIf=\"submitted && f.Codigo.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Codigo.errors.required\">Error</div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group col-4\">\n                    <label>Nombre documento</label>\n                    <input type=\"text\" formControlName=\"Nombre\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Nombre.errors }\" />\n                    <div *ngIf=\"submitted && f.Nombre.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Nombre.errors.required\">Error</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-4\">\n                        <label>Descripción</label>\n                        <input type=\"text\" formControlName=\"Descripcion\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Descripcion.errors }\" />\n                        <div *ngIf=\"submitted && f.Descripcion.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.Descripcion.errors.required\">Error</div>\n                        </div>\n                    </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>Tipo Documento</label>\n                    <select formControlName=\"TipoDocumentoId\" class=\"form-control form-control-sm\">\n                        <option *ngFor=\"let data of listadoTipoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                    </select>\n                </div>\n                \n                <div class=\"form-group col-4\">\n                    <label>Versión</label>\n                    <input type=\"text\" formControlName=\"Version\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Version.errors }\" />\n                    <div *ngIf=\"submitted && f.Version.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Version.errors.required\">Error</div>\n                    </div>\n                </div> \n\n                <div class=\"form-group col-4\">\n                    <label>Destino </label>\n                    <select formControlName=\"DestinoDocumentoId\" class=\"form-control form-control-sm\">\n                        <option *ngFor=\"let data of listadoDestinoDocumento\" [ngValue]=\"data.Id\" >{{ data.Nombre }}</option> <!--  -->\n                    </select>\n                </div> \n            </div>\n            \n            <div class=\"form-row\">\n                <div class=\"form-group col-5\">\n                    <label>Fecha Emision</label>\n                    <input type=\"text\" formControlName=\"FechaEmision\" [matDatepicker]=\"FechaEmision\" placeholder=\"Fecha emisión\">\n                    <mat-datepicker-toggle matSuffix [for]=\"FechaEmision\"></mat-datepicker-toggle>\n                    <mat-datepicker #FechaEmision></mat-datepicker>\n                </div>\n            \n                <div class=\"form-group col-5\">\n                    <label>Fecha Ingreso</label>\n                    <input type=\"text\" formControlName=\"FechaIngreso\" [matDatepicker]=\"FechaIngreso\" placeholder=\"Fecha ingreso\">\n                    <mat-datepicker-toggle matSuffix [for]=\"FechaIngreso\"></mat-datepicker-toggle>\n                    <mat-datepicker #FechaIngreso></mat-datepicker>\n                </div>\n            </div>\n\n            <div class=\"form-row\">\n                <div class=\"form-group col-6\">\n                    <label>Subir archivo </label>\n                    <input type=\"file\"\n                            formControlName=\"Archivo\"\n                            accept=\"document/*\" \n                            (change)=\"onFileSelect($event)\"\n                            class=\"form-control form-control-sm\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.nombres.errors }\" />\n                </div>\n            </div>\n\n            <div class=\"form-group col-6\">\n                <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n            </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"row\" [hidden]=\"!paso2\">\n        <div class=\"col-12\">\n            <mat-table [dataSource]=\"listadoAreas\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Seleccionar\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                        </mat-checkbox>\n                    </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\">\n                        </mat-checkbox>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"Nombre\">\n                    <mat-header-cell *matHeaderCellDef> Nombre Documento </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                    <mat-header-cell *matHeaderCellDef> Descripción </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"Acciones\">\n                    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> \n                        <button mat-icon-button color=\"primary\" ><!-- (click)=\"editarData(element)\" -->\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <!-- <button mat-icon-button color=\"warn\" (click)=\"eliminar Data(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button> -->\n                    </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"tituloColumnas\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></mat-row>\n            </mat-table>\n            <div class=\"form-group col-6\">\n                <button type=\"button\" [disabled]=\"!documentoGuardadoId\" class=\"btn btn-success\" (click)=\"asociarDocumentoArea()\">Guardar</button>\n            </div>\n        </div>\n    </div>  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DocumentoService } from '../services/documento.service';\nimport { Documento } from './documento';\nimport { map } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatSnackBar, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-documentos',\n  templateUrl: './documentos.component.html',\n  styleUrls: ['./documentos.component.css']\n})\nexport class DocumentosComponent implements OnInit {\n  listadoDocumentos: any[]\n  dataSource = new MatTableDataSource(this.listadoDocumentos);\n  displayedColumns: [\"Id\",\"Codigo\",\"Descripcion\"]\n  checked =false\n\n  constructor(\n    private _documentoService: DocumentoService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _snackBar: MatSnackBar, \n    private _sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    this.listarDocumentos()\n  }\n\n  /**\n   *\n   */\n  listarDocumentos(){\n    this._documentoService.listar()\n    .subscribe(data => { \n      console.log(data);\n      this.listadoDocumentos = data;\n    })\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <h1>Listado documentos</h1>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <mat-table #table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"Id\">\n                    <mat-header-cell *matHeaderCellDef> Id Documento</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\"> {{ element.Id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Codigo\">\n                        <mat-header-cell *matHeaderCellDef> Código Documento</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.Codigo }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"Descripcion\">\n                        <mat-header-cell *matHeaderCellDef> Descripcion Documento</mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{ element.Descripcion }} </mat-cell>\n                </ng-container>\n    \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n            </mat-table>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  areas: Area[]\n  constructor() { }\n\n  dataSource: MatTableDataSource<Area>;\n  tituloColumnas: string[] = ['area','ir']\n\n  ngOnInit() {\n    this.listarAreas()\n  }\n\n  listarAreas(){\n    this.areas = JSON.parse(localStorage.getItem('areas'))\n    this.areas = this.areas.filter(item => item.Estado == true);\n    this.dataSource = new MatTableDataSource(this.areas)\n  }\n}\n","<div class=\"container-fluid\">\n   <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>Página de inicio</h1>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            \n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n           <h2>Mis áreas de trabajo</h2> \n        </div>\n    </div>\n    \n    <div class=\"col-12\">\n        <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"area\">\n                <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Area </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.Nombre }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ir\">\n                <th mat-header-cell *matHeaderCellDef style=\"justify-content:center\"> Ir </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"justify-content:center\"> \n                    <a routerLink=\"/app/biblioteca/de/1/{{ element.Id}}\"><mat-icon>forward</mat-icon></a>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"tituloColumnas\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: tituloColumnas;\"></tr>\n        </table> \n    </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\n\nimport { LoaderService } from '../services/loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n    constructor(public loaderService: LoaderService) { }\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.loaderService.show();\n        return next.handle(req).pipe(\n            finalize(() => this.loaderService.hide())\n        );\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.css']\n})\nexport class LoginLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n</div>","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { Area } from 'src/app/area/area';\nimport { AccountService } from 'src/app/services/account.service';\nimport { Router } from '@angular/router';\nimport { DestinoDocumentoService } from 'src/app/services/destino-documento.service';\nimport { DestinoDocumento } from 'src/app/destino-documento/destino-documento';\nimport { filter, map } from 'rxjs/operators';\nimport { JoyrideService } from 'ngx-joyride';\nimport { MatPaginator} from '@angular/material/paginator';\nimport { MatSort} from '@angular/material/sort';\nimport { CookieService} from 'ngx-cookie-service'\n\n@Component({\n  selector: 'app-page-layout',\n  templateUrl: './page-layout.component.html',\n  styleUrls: ['./page-layout.component.css']\n})\nexport class PageLayoutComponent implements OnInit {\n  \n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n\n  title = 'Angular';\n  areas: Area[]\n  destinosDocumentos: DestinoDocumento[]\n  currentUser: Account; \n  documentosEstructurales: any[]\n  rolUsuario: string;\n  destinosPrimarios = []\n  destinosSecundarios = []\n  \n  constructor(\n    private _router: Router,\n    private _accountService: AccountService,\n    private _destinoDocumentoService: DestinoDocumentoService,\n    private _cookieService: CookieService\n  ) { \n    \n  }\n\n\n  ngOnInit() {\n    var usuario = localStorage.getItem('user')\n    var role = localStorage.getItem('role')\n    this.areas = JSON.parse(localStorage.getItem('areas'))\n    if(usuario){\n      this.rolUsuario = role\n      this.separarMenus()\n    }\n    this.areas = this.areas.filter(ar => ar.Estado != false)\n  }\n\n  /**\n   * \n   */\n  separarMenus(){\n    //this.documentosEstructurales = this.destinos.filter(x => x.Id <= 8)\n    this._destinoDocumentoService.listar()\n    .pipe(\n      map(result => { return result.filter(data => data.Estado == true) }))\n    .subscribe(\n      result=>{\n        this.destinosPrimarios = result.filter(data => data.Item == 'da').sort((a,b) => a.Nombre.localeCompare(b.Nombre))\n        this.destinosSecundarios = result.filter(y => y.Item == \"md\").filter(item => item.Nombre != 'Documentos por área' ).sort((a,b) => a.Nombre.localeCompare(b.Nombre))\n      },\n      error=>{\n        console.error(error)\n      }\n    )\n  }\n\n  \n\n  /**\n   * \n   */\n  cerrarSesion(){\n    localStorage.clear();\n    this._accountService.logOut();\n    this._router.navigate(['']);\n    \n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row header-box d-flex flex-row\">\n        <div class=\"col-2\">\n            <img src=\"./assets/img/logo-nuevo-mvc.png\" class=\"img-fluid\"/>\n        </div>\n        <div class=\"col-5 offset-1 align-self-center\">\n            <h2> <a routerLink=\"['inicio']\">Documentos Operacionales</a> <a routerLink=\"['inicio']\" class=\"destacado\"> MVC</a></h2> \n        </div>\n        <div class=\"col-2 text-right align-self-center\">\n            <app-listado-areas></app-listado-areas>\n        </div>\n        <div class=\"col-2 align-self-center\">\n            <a (click)=\"cerrarSesion()\" href=\"#\" class=\"float-right btn btn-mvc\">\n                <mat-icon>exit_to_app</mat-icon>Cerrar Sesión \n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2 side-box\" style=\"overflow:auto\">\n            <mat-nav-list>\n                <div *ngIf=\"rolUsuario == '1'\">\n                    <h4>Menú</h4>\n                    <p class=\"texto-menu\">Gestión Usuarios</p>\n                    <a mat-list-item [routerLink]=\"['account']\" [routerLinkActive]=\"['active']\">\n                        <mat-icon>assignment_ind</mat-icon>\n                        <span class=\"nav-caption\">Usuarios</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\" title=\"Biblioteca General\">Documentos</p>\n                    <a mat-list-item [routerLink]=\"['biblioteca']\" [routerLinkActive]=\"['active']\"\n                        text=\"Acá están todos los documentos del sistema\">\n                        <mat-icon>account_balance</mat-icon>\n                        <span class=\"nav-caption\">Biblioteca documental</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\"\n                        title=\"Documentos aplicables a MVC\" \n                        text=\"Documentos de uso común en nuestras labores\">Documentos Aplicables MVC</p>\n                    <a mat-list-item routerLink=\"biblioteca/de/{{ destino.Id }}\" *ngFor=\"let destino of destinosPrimarios\" style=\"font-size:12px\">\n                        <mat-icon>navigate_next</mat-icon><span class=\"nav-caption\">{{ destino.Nombre }}</span>\n                    </a>\n                </div>\n                <div>\n                    <p class=\"texto-menu\"\n                        title=\"Documentos aplicables a MVC\" \n                        text=\"Documentos de uso común en nuestras labores\">Más Documentos</p>\n                    <a mat-list-item routerLink=\"biblioteca/de/{{ destino.Id }}\" *ngFor=\"let destino of destinosSecundarios\" style=\"font-size:12px\">\n                        <mat-icon>keyboard_arrow_right</mat-icon><span class=\"nav-caption\">{{ destino.Nombre }}</span>\n                    </a>\n                </div>\n            </mat-nav-list>\n        </div>\n        <div class=\"col-10 content-box\" >\n            <div class=\"row\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n    <div class=\"row row-footer\" >\n        Minera Valle Central \n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../services/account.service';\nimport { RouteConfigLoadEnd } from '@angular/router';\nimport { Router } from \"@angular/router\";\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\nimport { LoaderService } from '../services/loader.service'\nimport { Subject } from 'rxjs';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public formLogin: FormGroup\n  submitted = false\n  userLogged = false\n  public isDisabled = true;\n   mensajeError: string = '' \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _accountService: AccountService,\n    private _router:Router,\n    private _snackBar: MatSnackBar\n    ) {    }\n\n\n  ngOnInit() {\n    this.buildForm()\n  }\n\n  buildForm(){\n    this.formLogin = this.formBuilder.group({\n      UserName: ['', Validators.required ],\n      Password: ['', Validators.required ],\n    });\n  }\n\n  get f() { return this.formLogin.controls; }\n\n  onSubmit(){\n    this.mensajeError = ''\n    this._accountService.validateUser(this.formLogin.value)\n    .subscribe(\n      result => {\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        localStorage.setItem(\"role\", result.Role );\n        localStorage.setItem(\"areas\", JSON.stringify(result.Areas));\n        localStorage.setItem(\"token\", result.Token)\n        this._router.navigate([\"app/inicio\"])\n      },\n      error => {\n        this.mensajeError = error.error.Message\n      }\n    )\n  }\n}","<div class=\"row h-100\">\n    <div class=\"col-8 f-height\">\n        <div class=\"row\">\n            <div class=\"col-12 d-flex justify-content-center\">\n                <img src=\"assets/img/bienvenido.png\" class=\"texto-superior\"/>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-12 mx-auto d-block\">\n                <img src=\"assets/img/subtexto.png\" class=\"img-fluid second-row\" />\n            </div>\n        </div>\n    </div>\n    <div class=\"col-4 f-height border border-left-dark\">\n        <br><br>\n        <form [formGroup]=\"formLogin\"  (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\" >\n                <div class=\"col-12\">\n                    <h3>Iniciar Sesión</h3>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"mensajeError != ''\">\n                <div class=\"col-12\">\n                    <div class=\"alert alert-danger\" >\n                        {{ mensajeError }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-9\">\n                    <label>Correo electrónico</label>\n                    <input type=\"text\" formControlName=\"UserName\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n                    <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.UserName.errors.required\">Error</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-9\">\n                    <label>Password</label>\n                    <input type=\"password\" id=\"password\" formControlName=\"Password\" class=\"form-control form-control-sm\" [ngClass]=\"{ 'is-invalid': submitted && f.Password.errors }\" />\n                    <div *ngIf=\"submitted && f.Password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.Password.errors.required\">Error</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group col-6\">\n                    <button type=\"submit\" [disabled]=\"!formLogin.valid\"  id=\"ingresar\" class=\"btn btn-success\">Ingresar</button>\n                </div>\n            </div> \n        </form>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\" class=\"footer-height\">&nbsp; Ti MVC</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Account } from '../account/account'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  _apiUrl: string  = environment.apiUrl;\n\n  headers = {\n    headers: new HttpHeaders()\n      .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n  }\n  \n  constructor(private _http: HttpClient) {}\n\n  guardar(account: Account){\n    const _header = new HttpHeaders().set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.post<string>(this._apiUrl + 'account/createUser/', account, { headers: _header}  )\n  }\n\n  \n  actualizar(id: any, account: Account){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.put<Account>(this._apiUrl + \"account/update/\" + id, account, { headers: _header})\n  }\n\n  \n  eliminar(id: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.delete<Account>(this._apiUrl + \"account/delete/\" + id, { headers: _header} )\n  }\n\n  \n  listar(){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account[]>(this._apiUrl + \"account\" ,{ headers: _header})\n  }\n\n  \n  listarPorId(id: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account>(this._apiUrl + \"account/porid/\" + id , { headers: _header})\n  }\n\n\n  listarPorNombreUsuario(userName: string){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account>(this._apiUrl + \"account/pornombre/\" + userName, { headers: _header} )\n  }\n\n\n  listarDataUsuarios(){\n    //console.log(localStorage.getItem(\"token\"))\n    const _header = new HttpHeaders()\n        .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.get<Account[]>(this._apiUrl + \"account/listardatausuarios\", { headers: _header })\n\n  }\n\n\n  asociarUsuarioArea(input: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.post(this._apiUrl + \"account/asociarusuarioarea/\" , input, { headers: _header})\n  }\n\n  actualizarAsociacionUsuarioArea(idUsuario: string, input: any){\n    const _header = new HttpHeaders()\n    .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\"))\n    return this._http.put(this._apiUrl + \"account/actualizarasociacion/\" + idUsuario , input, { headers: _header})\n  }\n\n  validateUser(formLogin: any){\n    return this._http.post<any>(this._apiUrl + \"account/signin\", formLogin); \n  }\n\n  logOut(){\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n//import { HttpClient } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from 'src/environments/environment';\nimport { Area } from '../area/area';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n  private apiUrl = environment.apiUrl;\n  \n  constructor(private _http: HttpClient) {}\n\n\n  /**\n   * Lista todas las áreas\n   */\n  listar(){\n    return this._http.get<Area[]>(this.apiUrl + \"area\")\n  }\n\n\n  /**\n   * Lista el área asociada a un Id\n   * @param Id Id del área\n   */\n  listarPorId(Id: number){\n    return this._http.get<Area>(this.apiUrl +\"/area/\" +Id)\n  }\n\n\n  /**\n   * Lista las áreas asociadas a un nombre\n   * @param nombre nombre del área consultada\n   */\n  listarPorNombre(nombre: string){\n    return this._http.get<Area[]>(this.apiUrl + \"/area/\" + nombre)\n  }\n\n  listarAreasUsuario(idUsuario: string){\n    return this._http.get<Area[]>(this.apiUrl + \"/area/poridusuario/\" + idUsuario)\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { DestinoDocumento } from '../destino-documento/destino-documento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestinoDocumentoService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _httpClient: HttpClient) { \n  }\n\n  public guardar(){}\n  public editar(){}\n  public eliminar(){}\n\n  public listar(){\n    return this._httpClient.get<DestinoDocumento[]>(this.apiUrl +\"destinodocumento\")\n  }\n\n  public listarPorId(Id: any){\n    return this._httpClient.get<DestinoDocumento>(this.apiUrl +\"destinodocumento/\" + Id)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Documento } from '../documentos/documento';\nimport { environment } from 'src/environments/environment';\nimport { Area } from '../area/area';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentoService {\n\n  apiUrl: string = environment.apiUrl\n\n  header = {\n    headers: new HttpHeaders()\n      .set('Authorization',  'Bearer ' + localStorage.getItem(\"token\") )\n  }\n  \n  constructor(private _http: HttpClient) { }\n\n  confirmar(mensaje: string): boolean {\n    return window.confirm(mensaje);\n  }\n\n  guardar(documento: any){\n    return this._http.post<any>(this.apiUrl + \"documento\", documento, this.header)\n  }\n\n  editar(documento: any){\n    return this._http.put<Documento>(this.apiUrl + \"documento\", documento, this.header)\n  }\n  \n  eliminar(documento: Documento){\n    return this._http.delete<Documento>(this.apiUrl +\"documento/\" + documento.Id, this.header)\n  }\n  \n  /**\n   * Muestra todos los documentos del sistema\n   */\n  listar(){\n    return this._http.get<Documento[]>(this.apiUrl +\"documento\", this.header)\n  }\n\n  /**\n   * Muestra un documento con el Id pasado por parámetro\n   * @param id Id del documento\n   */\n  listarPorId(id: any){\n    return this._http.get<Documento>(this.apiUrl +\"documento/\"+ id, this.header)\n  }\n\n\n  /**\n   * Retorna el documento asociado al código\n   * @param codigo Código del documento\n   */\n  listarPorCodigo(codigo: string){\n    return this._http.get<Documento>(this.apiUrl +\"documento/\"+ codigo, this.header)\n  }\n\n\n  /**\n   * Guarda el documento y el área en la tabla de la base  de datos\n   * @param formData \n   */\n  asociarDocumentoArea(formData: any){\n    return this._http.post(this.apiUrl + \"documento/asociar\", formData, this.header )\n  }\n\n  /**\n   * Actualiza un documento y el área en la tabla de la base  de datos\n   * @param formData \n   */\n  actualizarDocumentoArea(formData: any){\n    return this._http.put<any>(this.apiUrl + \"documento/actualizarasociacion\", formData, this.header )\n  }\n\n\n  /**\n   * Lista por el array de areas que son pasadas por parámetro \n   * @param areas array de areas\n   */\n  listarPorArea(areas: Area[]){\n    //agregar parámetros\n    let httpParams = new HttpParams(); \n    httpParams = httpParams.append('areas', JSON.stringify(areas));\n    return this._http.get<Documento[]>(this.apiUrl + \"documento/porarea\", {  params: httpParams , headers: new HttpHeaders().set('Authorization',  'Bearer ' + localStorage.getItem(\"token\") )} )\n  }\n\n\n  descargarDocumento(Id: number){\n    return this._http.get(this.apiUrl + \"documento/descargar/\"+ Id, {\n      headers: ({\n        Authorization: 'Bearer ' + localStorage.getItem(\"token\"),\n      })\n      , responseType: 'blob' }); \n  }\n\n  listarAreasDocumento(documentoId: any){\n    return this._http.get<Area[]>(this.apiUrl + \"documento/areas/\"+ documentoId, this.header); \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor() { }\n\n  isLoading = new Subject<boolean>();\n  show() {\n      this.isLoading.next(true);\n  }\n  hide() {\n      this.isLoading.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Role } from '../role/role';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _http: HttpClient) { }\n\n  listar(){\n    return this._http.get<Role[]>(this.apiUrl +\"role\")\n  }\n\n  listarPorId(Id: number){\n    return this._http.get<Role[]>(this.apiUrl +\"role/\" + Id  )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { TipoDocumento } from '../tipo-documento/tipo-documento';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoDocumentoService {\n\n  apiUrl: string = environment.apiUrl\n  \n  constructor(private _httpClient: HttpClient) { }\n\n  guardar(tipoDocumento: any){\n    return this._httpClient.post<any>(this.apiUrl + \"tipodocumento\", tipoDocumento)\n  }\n\n  editar(tipoDocumento: any){\n    return this._httpClient.put<any>(this.apiUrl + \"tipodocumento\", tipoDocumento)\n  }\n  \n  eliminar(tipoDocumento: any){\n    return this._httpClient.delete<any>(this.apiUrl +\"tipodocumento/\" + tipoDocumento.Id)\n  }\n  \n  /**\n   * Muestra todos los documentos del sistema\n   */\n  listar(){\n    return this._httpClient.get<TipoDocumento[]>(this.apiUrl +\"tipodocumento\")\n  }\n\n  /**\n   * Muestra un documento con el Id pasado por parámetro\n   * @param id Id del documento\n   */\n  listarPorId(id: any){\n    return this._httpClient.get<TipoDocumento>(this.apiUrl +\"tipodocumento/\"+ id)\n  }\n\n\n  /**\n   * Retorna el documento asociado al código\n   * @param codigo Código del documento\n   */\n  listarPorCodigo(codigo: string){\n   \n  }\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate\n{\n  constructor(private _router: Router) { }\n\n  canActivate() {\n    const jwtHelper = new JwtHelperService();\n    let tokenParam = JSON.parse(localStorage['user'])\n\n    //verificar  si el localstorage contiene data\n    if(localStorage === null)\n    {\n      // console.log(\"No storage data\")\n      localStorage.clear();\n      this._router.navigate(['/']);\n    }\n\n    //verificar si el token expiró\n    if(jwtHelper.isTokenExpired(tokenParam['Token']))\n    {\n      // console.log(\"Token vencido\")\n      localStorage.clear();\n      this._router.navigate(['/']);\n    }\n    return true;\n  }\n}\n","export const environment = {\n    production: false,\n    apiUrl:'http://192.168.2.150/sgi_api/api/'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}